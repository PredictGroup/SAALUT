#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Saalut
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SaalutExpress")]
	public partial class SaalutDataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertBarcode(Barcode instance);
    partial void UpdateBarcode(Barcode instance);
    partial void DeleteBarcode(Barcode instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertPriceChangeJour(PriceChangeJour instance);
    partial void UpdatePriceChangeJour(PriceChangeJour instance);
    partial void DeletePriceChangeJour(PriceChangeJour instance);
    partial void InsertGood(Good instance);
    partial void UpdateGood(Good instance);
    partial void DeleteGood(Good instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertThermoLabel(ThermoLabel instance);
    partial void UpdateThermoLabel(ThermoLabel instance);
    partial void DeleteThermoLabel(ThermoLabel instance);
    partial void InsertTermoPrinter(TermoPrinter instance);
    partial void UpdateTermoPrinter(TermoPrinter instance);
    partial void DeleteTermoPrinter(TermoPrinter instance);
    partial void InsertWeightDepart(WeightDepart instance);
    partial void UpdateWeightDepart(WeightDepart instance);
    partial void DeleteWeightDepart(WeightDepart instance);
    partial void InsertPricesAkcionnie(PricesAkcionnie instance);
    partial void UpdatePricesAkcionnie(PricesAkcionnie instance);
    partial void DeletePricesAkcionnie(PricesAkcionnie instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertSettingsSAPERPTbl(SettingsSAPERPTbl instance);
    partial void UpdateSettingsSAPERPTbl(SettingsSAPERPTbl instance);
    partial void DeleteSettingsSAPERPTbl(SettingsSAPERPTbl instance);
    partial void InsertUKMPriceTbl(UKMPriceTbl instance);
    partial void UpdateUKMPriceTbl(UKMPriceTbl instance);
    partial void DeleteUKMPriceTbl(UKMPriceTbl instance);
    partial void InsertSAPPriceTbl(SAPPriceTbl instance);
    partial void UpdateSAPPriceTbl(SAPPriceTbl instance);
    partial void DeleteSAPPriceTbl(SAPPriceTbl instance);
    partial void InsertSAPOUT_REST(SAPOUT_REST instance);
    partial void UpdateSAPOUT_REST(SAPOUT_REST instance);
    partial void DeleteSAPOUT_REST(SAPOUT_REST instance);
    partial void InsertSAPOUT_SMENA(SAPOUT_SMENA instance);
    partial void UpdateSAPOUT_SMENA(SAPOUT_SMENA instance);
    partial void DeleteSAPOUT_SMENA(SAPOUT_SMENA instance);
    partial void InsertUKMSoldGoods(UKMSoldGoods instance);
    partial void UpdateUKMSoldGoods(UKMSoldGoods instance);
    partial void DeleteUKMSoldGoods(UKMSoldGoods instance);
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertTermoCennicQuoue(TermoCennicQuoue instance);
    partial void UpdateTermoCennicQuoue(TermoCennicQuoue instance);
    partial void DeleteTermoCennicQuoue(TermoCennicQuoue instance);
    partial void InsertTermoCennic(TermoCennic instance);
    partial void UpdateTermoCennic(TermoCennic instance);
    partial void DeleteTermoCennic(TermoCennic instance);
    partial void InsertStoreInfoExt(StoreInfoExt instance);
    partial void UpdateStoreInfoExt(StoreInfoExt instance);
    partial void DeleteStoreInfoExt(StoreInfoExt instance);
    partial void InsertPrintTemplatesExt(PrintTemplatesExt instance);
    partial void UpdatePrintTemplatesExt(PrintTemplatesExt instance);
    partial void DeletePrintTemplatesExt(PrintTemplatesExt instance);
    partial void InsertWeightGoodsPlu(WeightGoodsPlu instance);
    partial void UpdateWeightGoodsPlu(WeightGoodsPlu instance);
    partial void DeleteWeightGoodsPlu(WeightGoodsPlu instance);
    partial void InsertWeightGroups(WeightGroups instance);
    partial void UpdateWeightGroups(WeightGroups instance);
    partial void DeleteWeightGroups(WeightGroups instance);
    partial void InsertPrintTemplates(PrintTemplates instance);
    partial void UpdatePrintTemplates(PrintTemplates instance);
    partial void DeletePrintTemplates(PrintTemplates instance);
    partial void InsertMobileTermoPrinters(MobileTermoPrinters instance);
    partial void UpdateMobileTermoPrinters(MobileTermoPrinters instance);
    partial void DeleteMobileTermoPrinters(MobileTermoPrinters instance);
    partial void InsertWeightNames(WeightNames instance);
    partial void UpdateWeightNames(WeightNames instance);
    partial void DeleteWeightNames(WeightNames instance);
    partial void InsertPriceChangeLine(PriceChangeLine instance);
    partial void UpdatePriceChangeLine(PriceChangeLine instance);
    partial void DeletePriceChangeLine(PriceChangeLine instance);
    partial void InsertStoreInfos(StoreInfos instance);
    partial void UpdateStoreInfos(StoreInfos instance);
    partial void DeleteStoreInfos(StoreInfos instance);
    #endregion
		
		public SaalutDataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SaalutExpressConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SaalutDataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaalutDataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaalutDataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaalutDataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Price> Prices
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<Barcode> Barcodes
		{
			get
			{
				return this.GetTable<Barcode>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<PriceChangeJour> PriceChangeJours
		{
			get
			{
				return this.GetTable<PriceChangeJour>();
			}
		}
		
		public System.Data.Linq.Table<Good> Goods
		{
			get
			{
				return this.GetTable<Good>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<ThermoLabel> ThermoLabels
		{
			get
			{
				return this.GetTable<ThermoLabel>();
			}
		}
		
		public System.Data.Linq.Table<TermoPrinter> TermoPrinters
		{
			get
			{
				return this.GetTable<TermoPrinter>();
			}
		}
		
		public System.Data.Linq.Table<WeightDepart> WeightDeparts
		{
			get
			{
				return this.GetTable<WeightDepart>();
			}
		}
		
		public System.Data.Linq.Table<PricesAkcionnie> PricesAkcionnies
		{
			get
			{
				return this.GetTable<PricesAkcionnie>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<SettingsSAPERPTbl> SettingsSAPERPTbls
		{
			get
			{
				return this.GetTable<SettingsSAPERPTbl>();
			}
		}
		
		public System.Data.Linq.Table<UKMPriceTbl> UKMPriceTbls
		{
			get
			{
				return this.GetTable<UKMPriceTbl>();
			}
		}
		
		public System.Data.Linq.Table<SAPPriceTbl> SAPPriceTbls
		{
			get
			{
				return this.GetTable<SAPPriceTbl>();
			}
		}
		
		public System.Data.Linq.Table<SAPOUT_REST> SAPOUT_REST
		{
			get
			{
				return this.GetTable<SAPOUT_REST>();
			}
		}
		
		public System.Data.Linq.Table<SAPOUT_SMENA> SAPOUT_SMENA
		{
			get
			{
				return this.GetTable<SAPOUT_SMENA>();
			}
		}
		
		public System.Data.Linq.Table<UKMSoldGoods> UKMSoldGoods
		{
			get
			{
				return this.GetTable<UKMSoldGoods>();
			}
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<TermoCennicQuoue> TermoCennicQuoue
		{
			get
			{
				return this.GetTable<TermoCennicQuoue>();
			}
		}
		
		public System.Data.Linq.Table<TermoCennic> TermoCennic
		{
			get
			{
				return this.GetTable<TermoCennic>();
			}
		}
		
		public System.Data.Linq.Table<StoreInfoExt> StoreInfoExt
		{
			get
			{
				return this.GetTable<StoreInfoExt>();
			}
		}
		
		public System.Data.Linq.Table<PrintTemplatesExt> PrintTemplatesExt
		{
			get
			{
				return this.GetTable<PrintTemplatesExt>();
			}
		}
		
		public System.Data.Linq.Table<WeightGoodsPlu> WeightGoodsPlu
		{
			get
			{
				return this.GetTable<WeightGoodsPlu>();
			}
		}
		
		public System.Data.Linq.Table<WeightGroups> WeightGroups
		{
			get
			{
				return this.GetTable<WeightGroups>();
			}
		}
		
		public System.Data.Linq.Table<PrintTemplates> PrintTemplates
		{
			get
			{
				return this.GetTable<PrintTemplates>();
			}
		}
		
		public System.Data.Linq.Table<MobileTermoPrinters> MobileTermoPrinters
		{
			get
			{
				return this.GetTable<MobileTermoPrinters>();
			}
		}
		
		public System.Data.Linq.Table<WeightNames> WeightNames
		{
			get
			{
				return this.GetTable<WeightNames>();
			}
		}
		
		public System.Data.Linq.Table<PriceChangeLine> PriceChangeLine
		{
			get
			{
				return this.GetTable<PriceChangeLine>();
			}
		}
		
		public System.Data.Linq.Table<StoreInfos> StoreInfos
		{
			get
			{
				return this.GetTable<StoreInfos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prices")]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _GoodID;
		
		private System.Nullable<double> _Price1;
		
		private System.Nullable<int> _Version_UKM;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Good> _Good;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGoodIDChanging(System.Nullable<int> value);
    partial void OnGoodIDChanged();
    partial void OnPrice1Changing(System.Nullable<double> value);
    partial void OnPrice1Changed();
    partial void OnVersion_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_UKMChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Price()
		{
			this._Good = default(EntityRef<Good>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodID", DbType="Int")]
		public System.Nullable<int> GoodID
		{
			get
			{
				return this._GoodID;
			}
			set
			{
				if ((this._GoodID != value))
				{
					if (this._Good.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoodIDChanging(value);
					this.SendPropertyChanging();
					this._GoodID = value;
					this.SendPropertyChanged("GoodID");
					this.OnGoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Price", Storage="_Price1", DbType="Float")]
		public System.Nullable<double> Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_UKM", DbType="Int")]
		public System.Nullable<int> Version_UKM
		{
			get
			{
				return this._Version_UKM;
			}
			set
			{
				if ((this._Version_UKM != value))
				{
					this.OnVersion_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_UKM = value;
					this.SendPropertyChanged("Version_UKM");
					this.OnVersion_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_Price", Storage="_Good", ThisKey="GoodID", OtherKey="ID", IsForeignKey=true)]
		public Good Good
		{
			get
			{
				return this._Good.Entity;
			}
			set
			{
				Good previousValue = this._Good.Entity;
				if (((previousValue != value) 
							|| (this._Good.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Good.Entity = null;
						previousValue.Prices.Remove(this);
					}
					this._Good.Entity = value;
					if ((value != null))
					{
						value.Prices.Add(this);
						this._GoodID = value.ID;
					}
					else
					{
						this._GoodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Good");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Barcodes")]
	public partial class Barcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Barcode1;
		
		private System.Nullable<int> _GoodID;
		
		private System.Nullable<int> _Version_UKM;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Good> _Good;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarcode1Changing(string value);
    partial void OnBarcode1Changed();
    partial void OnGoodIDChanging(System.Nullable<int> value);
    partial void OnGoodIDChanged();
    partial void OnVersion_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_UKMChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Barcode()
		{
			this._Good = default(EntityRef<Good>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Barcode", Storage="_Barcode1", DbType="NVarChar(50)")]
		public string Barcode1
		{
			get
			{
				return this._Barcode1;
			}
			set
			{
				if ((this._Barcode1 != value))
				{
					this.OnBarcode1Changing(value);
					this.SendPropertyChanging();
					this._Barcode1 = value;
					this.SendPropertyChanged("Barcode1");
					this.OnBarcode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodID", DbType="Int")]
		public System.Nullable<int> GoodID
		{
			get
			{
				return this._GoodID;
			}
			set
			{
				if ((this._GoodID != value))
				{
					if (this._Good.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoodIDChanging(value);
					this.SendPropertyChanging();
					this._GoodID = value;
					this.SendPropertyChanged("GoodID");
					this.OnGoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_UKM", DbType="Int")]
		public System.Nullable<int> Version_UKM
		{
			get
			{
				return this._Version_UKM;
			}
			set
			{
				if ((this._Version_UKM != value))
				{
					this.OnVersion_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_UKM = value;
					this.SendPropertyChanged("Version_UKM");
					this.OnVersion_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_Barcode", Storage="_Good", ThisKey="GoodID", OtherKey="ID", IsForeignKey=true)]
		public Good Good
		{
			get
			{
				return this._Good.Entity;
			}
			set
			{
				Good previousValue = this._Good.Entity;
				if (((previousValue != value) 
							|| (this._Good.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Good.Entity = null;
						previousValue.Barcodes.Remove(this);
					}
					this._Good.Entity = value;
					if ((value != null))
					{
						value.Barcodes.Add(this);
						this._GoodID = value.ID;
					}
					else
					{
						this._GoodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Good");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DepartNum_UKM;
		
		private string _DepartName;
		
		private System.Nullable<int> _Version_UKM;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Good> _Goods;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDepartNum_UKMChanging(System.Nullable<int> value);
    partial void OnDepartNum_UKMChanged();
    partial void OnDepartNameChanging(string value);
    partial void OnDepartNameChanged();
    partial void OnVersion_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_UKMChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Department()
		{
			this._Goods = new EntitySet<Good>(new Action<Good>(this.attach_Goods), new Action<Good>(this.detach_Goods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartNum_UKM", DbType="Int")]
		public System.Nullable<int> DepartNum_UKM
		{
			get
			{
				return this._DepartNum_UKM;
			}
			set
			{
				if ((this._DepartNum_UKM != value))
				{
					this.OnDepartNum_UKMChanging(value);
					this.SendPropertyChanging();
					this._DepartNum_UKM = value;
					this.SendPropertyChanged("DepartNum_UKM");
					this.OnDepartNum_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(250)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this.OnDepartNameChanging(value);
					this.SendPropertyChanging();
					this._DepartName = value;
					this.SendPropertyChanged("DepartName");
					this.OnDepartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_UKM", DbType="Int")]
		public System.Nullable<int> Version_UKM
		{
			get
			{
				return this._Version_UKM;
			}
			set
			{
				if ((this._Version_UKM != value))
				{
					this.OnVersion_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_UKM = value;
					this.SendPropertyChanged("Version_UKM");
					this.OnVersion_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Good", Storage="_Goods", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Good> Goods
		{
			get
			{
				return this._Goods;
			}
			set
			{
				this._Goods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Goods(Good entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Goods(Good entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceChangeJours")]
	public partial class PriceChangeJour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Change_log_id_UKM;
		
		private System.Nullable<int> _Order_no;
		
		private string _ByDocument;
		
		private System.Nullable<bool> _FromSAP;
		
		private System.Nullable<bool> _FromTerminal;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _InUse;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<TermoCennicQuoue> _TermoCennicQuoue;
		
		private EntitySet<PriceChangeLine> _PriceChangeLine;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnChange_log_id_UKMChanging(System.Nullable<int> value);
    partial void OnChange_log_id_UKMChanged();
    partial void OnOrder_noChanging(System.Nullable<int> value);
    partial void OnOrder_noChanged();
    partial void OnByDocumentChanging(string value);
    partial void OnByDocumentChanged();
    partial void OnFromSAPChanging(System.Nullable<bool> value);
    partial void OnFromSAPChanged();
    partial void OnFromTerminalChanging(System.Nullable<bool> value);
    partial void OnFromTerminalChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnInUseChanging(System.Nullable<bool> value);
    partial void OnInUseChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public PriceChangeJour()
		{
			this._TermoCennicQuoue = new EntitySet<TermoCennicQuoue>(new Action<TermoCennicQuoue>(this.attach_TermoCennicQuoue), new Action<TermoCennicQuoue>(this.detach_TermoCennicQuoue));
			this._PriceChangeLine = new EntitySet<PriceChangeLine>(new Action<PriceChangeLine>(this.attach_PriceChangeLine), new Action<PriceChangeLine>(this.detach_PriceChangeLine));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Change_log_id_UKM", DbType="Int")]
		public System.Nullable<int> Change_log_id_UKM
		{
			get
			{
				return this._Change_log_id_UKM;
			}
			set
			{
				if ((this._Change_log_id_UKM != value))
				{
					this.OnChange_log_id_UKMChanging(value);
					this.SendPropertyChanging();
					this._Change_log_id_UKM = value;
					this.SendPropertyChanged("Change_log_id_UKM");
					this.OnChange_log_id_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_no", DbType="Int")]
		public System.Nullable<int> Order_no
		{
			get
			{
				return this._Order_no;
			}
			set
			{
				if ((this._Order_no != value))
				{
					this.OnOrder_noChanging(value);
					this.SendPropertyChanging();
					this._Order_no = value;
					this.SendPropertyChanged("Order_no");
					this.OnOrder_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ByDocument", DbType="NVarChar(50)")]
		public string ByDocument
		{
			get
			{
				return this._ByDocument;
			}
			set
			{
				if ((this._ByDocument != value))
				{
					this.OnByDocumentChanging(value);
					this.SendPropertyChanging();
					this._ByDocument = value;
					this.SendPropertyChanged("ByDocument");
					this.OnByDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSAP", DbType="Bit")]
		public System.Nullable<bool> FromSAP
		{
			get
			{
				return this._FromSAP;
			}
			set
			{
				if ((this._FromSAP != value))
				{
					this.OnFromSAPChanging(value);
					this.SendPropertyChanging();
					this._FromSAP = value;
					this.SendPropertyChanged("FromSAP");
					this.OnFromSAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTerminal", DbType="Bit")]
		public System.Nullable<bool> FromTerminal
		{
			get
			{
				return this._FromTerminal;
			}
			set
			{
				if ((this._FromTerminal != value))
				{
					this.OnFromTerminalChanging(value);
					this.SendPropertyChanging();
					this._FromTerminal = value;
					this.SendPropertyChanged("FromTerminal");
					this.OnFromTerminalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InUse", DbType="Bit")]
		public System.Nullable<bool> InUse
		{
			get
			{
				return this._InUse;
			}
			set
			{
				if ((this._InUse != value))
				{
					this.OnInUseChanging(value);
					this.SendPropertyChanging();
					this._InUse = value;
					this.SendPropertyChanged("InUse");
					this.OnInUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceChangeJour_TermoCennicQuoue", Storage="_TermoCennicQuoue", ThisKey="ID", OtherKey="JournalID")]
		public EntitySet<TermoCennicQuoue> TermoCennicQuoue
		{
			get
			{
				return this._TermoCennicQuoue;
			}
			set
			{
				this._TermoCennicQuoue.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceChangeJour_PriceChangeLine", Storage="_PriceChangeLine", ThisKey="ID", OtherKey="JournalID")]
		public EntitySet<PriceChangeLine> PriceChangeLine
		{
			get
			{
				return this._PriceChangeLine;
			}
			set
			{
				this._PriceChangeLine.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TermoCennicQuoue(TermoCennicQuoue entity)
		{
			this.SendPropertyChanging();
			entity.PriceChangeJour = this;
		}
		
		private void detach_TermoCennicQuoue(TermoCennicQuoue entity)
		{
			this.SendPropertyChanging();
			entity.PriceChangeJour = null;
		}
		
		private void attach_PriceChangeLine(PriceChangeLine entity)
		{
			this.SendPropertyChanging();
			entity.PriceChangeJour = this;
		}
		
		private void detach_PriceChangeLine(PriceChangeLine entity)
		{
			this.SendPropertyChanging();
			entity.PriceChangeJour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Goods")]
	public partial class Good : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Articul;
		
		private string _Name;
		
		private string _Descr;
		
		private System.Nullable<int> _PLU;
		
		private System.Nullable<System.DateTime> _Exp_Date;
		
		private System.Nullable<int> _Exp_Qty;
		
		private string _Contents;
		
		private string _Barcode;
		
		private string _Edinic;
		
		private string _Producer;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _DepartmentID;
		
		private System.Nullable<int> _PrintTemplateID;
		
		private System.Nullable<int> _Version_UKM;
		
		private System.Nullable<int> _Version_Assort_UKM;
		
		private System.Nullable<int> _Version_Contenst_UKM;
		
		private System.Nullable<int> _Version_PrintTemplate_UKM;
		
		private string _Country;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Price> _Prices;
		
		private EntitySet<Barcode> _Barcodes;
		
		private EntitySet<PricesAkcionnie> _PricesAkcionnies;
		
		private EntitySet<TermoCennicQuoue> _TermoCennicQuoue;
		
		private EntitySet<PriceChangeLine> _PriceChangeLine;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<PrintTemplates> _PrintTemplates;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticulChanging(string value);
    partial void OnArticulChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnPLUChanging(System.Nullable<int> value);
    partial void OnPLUChanged();
    partial void OnExp_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnExp_DateChanged();
    partial void OnExp_QtyChanging(System.Nullable<int> value);
    partial void OnExp_QtyChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnEdinicChanging(string value);
    partial void OnEdinicChanged();
    partial void OnProducerChanging(string value);
    partial void OnProducerChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<int> value);
    partial void OnDepartmentIDChanged();
    partial void OnPrintTemplateIDChanging(System.Nullable<int> value);
    partial void OnPrintTemplateIDChanged();
    partial void OnVersion_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_UKMChanged();
    partial void OnVersion_Assort_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_Assort_UKMChanged();
    partial void OnVersion_Contenst_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_Contenst_UKMChanged();
    partial void OnVersion_PrintTemplate_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_PrintTemplate_UKMChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Good()
		{
			this._Prices = new EntitySet<Price>(new Action<Price>(this.attach_Prices), new Action<Price>(this.detach_Prices));
			this._Barcodes = new EntitySet<Barcode>(new Action<Barcode>(this.attach_Barcodes), new Action<Barcode>(this.detach_Barcodes));
			this._PricesAkcionnies = new EntitySet<PricesAkcionnie>(new Action<PricesAkcionnie>(this.attach_PricesAkcionnies), new Action<PricesAkcionnie>(this.detach_PricesAkcionnies));
			this._TermoCennicQuoue = new EntitySet<TermoCennicQuoue>(new Action<TermoCennicQuoue>(this.attach_TermoCennicQuoue), new Action<TermoCennicQuoue>(this.detach_TermoCennicQuoue));
			this._PriceChangeLine = new EntitySet<PriceChangeLine>(new Action<PriceChangeLine>(this.attach_PriceChangeLine), new Action<PriceChangeLine>(this.detach_PriceChangeLine));
			this._Department = default(EntityRef<Department>);
			this._Group = default(EntityRef<Group>);
			this._PrintTemplates = default(EntityRef<PrintTemplates>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Articul", DbType="NVarChar(50)")]
		public string Articul
		{
			get
			{
				return this._Articul;
			}
			set
			{
				if ((this._Articul != value))
				{
					this.OnArticulChanging(value);
					this.SendPropertyChanging();
					this._Articul = value;
					this.SendPropertyChanged("Articul");
					this.OnArticulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="NVarChar(MAX)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLU", DbType="Int")]
		public System.Nullable<int> PLU
		{
			get
			{
				return this._PLU;
			}
			set
			{
				if ((this._PLU != value))
				{
					this.OnPLUChanging(value);
					this.SendPropertyChanging();
					this._PLU = value;
					this.SendPropertyChanged("PLU");
					this.OnPLUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exp_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Exp_Date
		{
			get
			{
				return this._Exp_Date;
			}
			set
			{
				if ((this._Exp_Date != value))
				{
					this.OnExp_DateChanging(value);
					this.SendPropertyChanging();
					this._Exp_Date = value;
					this.SendPropertyChanged("Exp_Date");
					this.OnExp_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exp_Qty", DbType="Int")]
		public System.Nullable<int> Exp_Qty
		{
			get
			{
				return this._Exp_Qty;
			}
			set
			{
				if ((this._Exp_Qty != value))
				{
					this.OnExp_QtyChanging(value);
					this.SendPropertyChanging();
					this._Exp_Qty = value;
					this.SendPropertyChanged("Exp_Qty");
					this.OnExp_QtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(50)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edinic", DbType="NVarChar(20)")]
		public string Edinic
		{
			get
			{
				return this._Edinic;
			}
			set
			{
				if ((this._Edinic != value))
				{
					this.OnEdinicChanging(value);
					this.SendPropertyChanging();
					this._Edinic = value;
					this.SendPropertyChanged("Edinic");
					this.OnEdinicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producer", DbType="NVarChar(250)")]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this.OnProducerChanging(value);
					this.SendPropertyChanging();
					this._Producer = value;
					this.SendPropertyChanged("Producer");
					this.OnProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int")]
		public System.Nullable<int> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTemplateID", DbType="Int")]
		public System.Nullable<int> PrintTemplateID
		{
			get
			{
				return this._PrintTemplateID;
			}
			set
			{
				if ((this._PrintTemplateID != value))
				{
					if (this._PrintTemplates.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrintTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._PrintTemplateID = value;
					this.SendPropertyChanged("PrintTemplateID");
					this.OnPrintTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_UKM", DbType="Int")]
		public System.Nullable<int> Version_UKM
		{
			get
			{
				return this._Version_UKM;
			}
			set
			{
				if ((this._Version_UKM != value))
				{
					this.OnVersion_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_UKM = value;
					this.SendPropertyChanged("Version_UKM");
					this.OnVersion_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_Assort_UKM", DbType="Int")]
		public System.Nullable<int> Version_Assort_UKM
		{
			get
			{
				return this._Version_Assort_UKM;
			}
			set
			{
				if ((this._Version_Assort_UKM != value))
				{
					this.OnVersion_Assort_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_Assort_UKM = value;
					this.SendPropertyChanged("Version_Assort_UKM");
					this.OnVersion_Assort_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_Contenst_UKM", DbType="Int")]
		public System.Nullable<int> Version_Contenst_UKM
		{
			get
			{
				return this._Version_Contenst_UKM;
			}
			set
			{
				if ((this._Version_Contenst_UKM != value))
				{
					this.OnVersion_Contenst_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_Contenst_UKM = value;
					this.SendPropertyChanged("Version_Contenst_UKM");
					this.OnVersion_Contenst_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_PrintTemplate_UKM", DbType="Int")]
		public System.Nullable<int> Version_PrintTemplate_UKM
		{
			get
			{
				return this._Version_PrintTemplate_UKM;
			}
			set
			{
				if ((this._Version_PrintTemplate_UKM != value))
				{
					this.OnVersion_PrintTemplate_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_PrintTemplate_UKM = value;
					this.SendPropertyChanged("Version_PrintTemplate_UKM");
					this.OnVersion_PrintTemplate_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_Price", Storage="_Prices", ThisKey="ID", OtherKey="GoodID")]
		public EntitySet<Price> Prices
		{
			get
			{
				return this._Prices;
			}
			set
			{
				this._Prices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_Barcode", Storage="_Barcodes", ThisKey="ID", OtherKey="GoodID")]
		public EntitySet<Barcode> Barcodes
		{
			get
			{
				return this._Barcodes;
			}
			set
			{
				this._Barcodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_PricesAkcionnie", Storage="_PricesAkcionnies", ThisKey="ID", OtherKey="GoodID")]
		public EntitySet<PricesAkcionnie> PricesAkcionnies
		{
			get
			{
				return this._PricesAkcionnies;
			}
			set
			{
				this._PricesAkcionnies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_TermoCennicQuoue", Storage="_TermoCennicQuoue", ThisKey="ID", OtherKey="GoodID")]
		public EntitySet<TermoCennicQuoue> TermoCennicQuoue
		{
			get
			{
				return this._TermoCennicQuoue;
			}
			set
			{
				this._TermoCennicQuoue.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_PriceChangeLine", Storage="_PriceChangeLine", ThisKey="ID", OtherKey="GoodID")]
		public EntitySet<PriceChangeLine> PriceChangeLine
		{
			get
			{
				return this._PriceChangeLine;
			}
			set
			{
				this._PriceChangeLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Good", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Goods.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Goods.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Good", Storage="_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Goods.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Goods.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTemplates_Good", Storage="_PrintTemplates", ThisKey="PrintTemplateID", OtherKey="ID", IsForeignKey=true)]
		public PrintTemplates PrintTemplates
		{
			get
			{
				return this._PrintTemplates.Entity;
			}
			set
			{
				PrintTemplates previousValue = this._PrintTemplates.Entity;
				if (((previousValue != value) 
							|| (this._PrintTemplates.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintTemplates.Entity = null;
						previousValue.Good.Remove(this);
					}
					this._PrintTemplates.Entity = value;
					if ((value != null))
					{
						value.Good.Add(this);
						this._PrintTemplateID = value.ID;
					}
					else
					{
						this._PrintTemplateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintTemplates");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.Good = this;
		}
		
		private void detach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.Good = null;
		}
		
		private void attach_Barcodes(Barcode entity)
		{
			this.SendPropertyChanging();
			entity.Good = this;
		}
		
		private void detach_Barcodes(Barcode entity)
		{
			this.SendPropertyChanging();
			entity.Good = null;
		}
		
		private void attach_PricesAkcionnies(PricesAkcionnie entity)
		{
			this.SendPropertyChanging();
			entity.Good = this;
		}
		
		private void detach_PricesAkcionnies(PricesAkcionnie entity)
		{
			this.SendPropertyChanging();
			entity.Good = null;
		}
		
		private void attach_TermoCennicQuoue(TermoCennicQuoue entity)
		{
			this.SendPropertyChanging();
			entity.Good = this;
		}
		
		private void detach_TermoCennicQuoue(TermoCennicQuoue entity)
		{
			this.SendPropertyChanging();
			entity.Good = null;
		}
		
		private void attach_PriceChangeLine(PriceChangeLine entity)
		{
			this.SendPropertyChanging();
			entity.Good = this;
		}
		
		private void detach_PriceChangeLine(PriceChangeLine entity)
		{
			this.SendPropertyChanging();
			entity.Good = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GroupNum;
		
		private string _GroupName;
		
		private System.Nullable<int> _GroupRangeID;
		
		private System.Nullable<int> _PrintTemplateID;
		
		private System.Nullable<int> _Version_UKM;
		
		private System.Nullable<int> _Version_Template_UKM;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<Good> _Goods;
		
		private EntitySet<Group> _Groups;
		
		private EntityRef<Group> _Group1;
		
		private EntityRef<PrintTemplates> _PrintTemplates;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNumChanging(string value);
    partial void OnGroupNumChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnGroupRangeIDChanging(System.Nullable<int> value);
    partial void OnGroupRangeIDChanged();
    partial void OnPrintTemplateIDChanging(System.Nullable<int> value);
    partial void OnPrintTemplateIDChanged();
    partial void OnVersion_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_UKMChanged();
    partial void OnVersion_Template_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_Template_UKMChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Group()
		{
			this._Goods = new EntitySet<Good>(new Action<Good>(this.attach_Goods), new Action<Good>(this.detach_Goods));
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._Group1 = default(EntityRef<Group>);
			this._PrintTemplates = default(EntityRef<PrintTemplates>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNum", DbType="NVarChar(20)")]
		public string GroupNum
		{
			get
			{
				return this._GroupNum;
			}
			set
			{
				if ((this._GroupNum != value))
				{
					this.OnGroupNumChanging(value);
					this.SendPropertyChanging();
					this._GroupNum = value;
					this.SendPropertyChanged("GroupNum");
					this.OnGroupNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(250)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupRangeID", DbType="Int")]
		public System.Nullable<int> GroupRangeID
		{
			get
			{
				return this._GroupRangeID;
			}
			set
			{
				if ((this._GroupRangeID != value))
				{
					if (this._Group1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupRangeIDChanging(value);
					this.SendPropertyChanging();
					this._GroupRangeID = value;
					this.SendPropertyChanged("GroupRangeID");
					this.OnGroupRangeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTemplateID", DbType="Int")]
		public System.Nullable<int> PrintTemplateID
		{
			get
			{
				return this._PrintTemplateID;
			}
			set
			{
				if ((this._PrintTemplateID != value))
				{
					if (this._PrintTemplates.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrintTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._PrintTemplateID = value;
					this.SendPropertyChanged("PrintTemplateID");
					this.OnPrintTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_UKM", DbType="Int")]
		public System.Nullable<int> Version_UKM
		{
			get
			{
				return this._Version_UKM;
			}
			set
			{
				if ((this._Version_UKM != value))
				{
					this.OnVersion_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_UKM = value;
					this.SendPropertyChanged("Version_UKM");
					this.OnVersion_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_Template_UKM", DbType="Int")]
		public System.Nullable<int> Version_Template_UKM
		{
			get
			{
				return this._Version_Template_UKM;
			}
			set
			{
				if ((this._Version_Template_UKM != value))
				{
					this.OnVersion_Template_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_Template_UKM = value;
					this.SendPropertyChanged("Version_Template_UKM");
					this.OnVersion_Template_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Good", Storage="_Goods", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<Good> Goods
		{
			get
			{
				return this._Goods;
			}
			set
			{
				this._Goods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Group", Storage="_Groups", ThisKey="ID", OtherKey="GroupRangeID")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Group", Storage="_Group1", ThisKey="GroupRangeID", OtherKey="ID", IsForeignKey=true)]
		public Group Group1
		{
			get
			{
				return this._Group1.Entity;
			}
			set
			{
				Group previousValue = this._Group1.Entity;
				if (((previousValue != value) 
							|| (this._Group1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group1.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._Group1.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._GroupRangeID = value.ID;
					}
					else
					{
						this._GroupRangeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTemplates_Group", Storage="_PrintTemplates", ThisKey="PrintTemplateID", OtherKey="ID", IsForeignKey=true)]
		public PrintTemplates PrintTemplates
		{
			get
			{
				return this._PrintTemplates.Entity;
			}
			set
			{
				PrintTemplates previousValue = this._PrintTemplates.Entity;
				if (((previousValue != value) 
							|| (this._PrintTemplates.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintTemplates.Entity = null;
						previousValue.Group.Remove(this);
					}
					this._PrintTemplates.Entity = value;
					if ((value != null))
					{
						value.Group.Add(this);
						this._PrintTemplateID = value.ID;
					}
					else
					{
						this._PrintTemplateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintTemplates");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Goods(Good entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Goods(Good entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Group1 = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Group1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThermoLabels")]
	public partial class ThermoLabel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _FileLabelName;
		
		private System.Nullable<int> _GoodNameVStroke;
		
		private System.Nullable<int> _ContentsVStroke;
		
		private System.Nullable<bool> _Active;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileLabelNameChanging(string value);
    partial void OnFileLabelNameChanged();
    partial void OnGoodNameVStrokeChanging(System.Nullable<int> value);
    partial void OnGoodNameVStrokeChanged();
    partial void OnContentsVStrokeChanging(System.Nullable<int> value);
    partial void OnContentsVStrokeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public ThermoLabel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileLabelName", DbType="NVarChar(MAX)")]
		public string FileLabelName
		{
			get
			{
				return this._FileLabelName;
			}
			set
			{
				if ((this._FileLabelName != value))
				{
					this.OnFileLabelNameChanging(value);
					this.SendPropertyChanging();
					this._FileLabelName = value;
					this.SendPropertyChanged("FileLabelName");
					this.OnFileLabelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodNameVStroke", DbType="Int")]
		public System.Nullable<int> GoodNameVStroke
		{
			get
			{
				return this._GoodNameVStroke;
			}
			set
			{
				if ((this._GoodNameVStroke != value))
				{
					this.OnGoodNameVStrokeChanging(value);
					this.SendPropertyChanging();
					this._GoodNameVStroke = value;
					this.SendPropertyChanged("GoodNameVStroke");
					this.OnGoodNameVStrokeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentsVStroke", DbType="Int")]
		public System.Nullable<int> ContentsVStroke
		{
			get
			{
				return this._ContentsVStroke;
			}
			set
			{
				if ((this._ContentsVStroke != value))
				{
					this.OnContentsVStrokeChanging(value);
					this.SendPropertyChanging();
					this._ContentsVStroke = value;
					this.SendPropertyChanged("ContentsVStroke");
					this.OnContentsVStrokeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TermoPrinters")]
	public partial class TermoPrinter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _TermoPrinterPort;
		
		private string _TermoPrinterNetPath;
		
		private System.Nullable<bool> _Active;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTermoPrinterPortChanging(string value);
    partial void OnTermoPrinterPortChanged();
    partial void OnTermoPrinterNetPathChanging(string value);
    partial void OnTermoPrinterNetPathChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public TermoPrinter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermoPrinterPort", DbType="NVarChar(50)")]
		public string TermoPrinterPort
		{
			get
			{
				return this._TermoPrinterPort;
			}
			set
			{
				if ((this._TermoPrinterPort != value))
				{
					this.OnTermoPrinterPortChanging(value);
					this.SendPropertyChanging();
					this._TermoPrinterPort = value;
					this.SendPropertyChanged("TermoPrinterPort");
					this.OnTermoPrinterPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermoPrinterNetPath", DbType="NVarChar(MAX)")]
		public string TermoPrinterNetPath
		{
			get
			{
				return this._TermoPrinterNetPath;
			}
			set
			{
				if ((this._TermoPrinterNetPath != value))
				{
					this.OnTermoPrinterNetPathChanging(value);
					this.SendPropertyChanging();
					this._TermoPrinterNetPath = value;
					this.SendPropertyChanged("TermoPrinterNetPath");
					this.OnTermoPrinterNetPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeightDeparts")]
	public partial class WeightDepart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Num;
		
		private System.Nullable<int> _DepartmentID;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumChanging(string value);
    partial void OnNumChanged();
    partial void OnDepartmentIDChanging(System.Nullable<int> value);
    partial void OnDepartmentIDChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public WeightDepart()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="NVarChar(3)")]
		public string Num
		{
			get
			{
				return this._Num;
			}
			set
			{
				if ((this._Num != value))
				{
					this.OnNumChanging(value);
					this.SendPropertyChanging();
					this._Num = value;
					this.SendPropertyChanged("Num");
					this.OnNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int")]
		public System.Nullable<int> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PricesAkcionnie")]
	public partial class PricesAkcionnie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _GoodID;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<int> _Version_UKM;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Good> _Good;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGoodIDChanging(System.Nullable<int> value);
    partial void OnGoodIDChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnVersion_UKMChanging(System.Nullable<int> value);
    partial void OnVersion_UKMChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public PricesAkcionnie()
		{
			this._Good = default(EntityRef<Good>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodID", DbType="Int")]
		public System.Nullable<int> GoodID
		{
			get
			{
				return this._GoodID;
			}
			set
			{
				if ((this._GoodID != value))
				{
					if (this._Good.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoodIDChanging(value);
					this.SendPropertyChanging();
					this._GoodID = value;
					this.SendPropertyChanged("GoodID");
					this.OnGoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version_UKM", DbType="Int")]
		public System.Nullable<int> Version_UKM
		{
			get
			{
				return this._Version_UKM;
			}
			set
			{
				if ((this._Version_UKM != value))
				{
					this.OnVersion_UKMChanging(value);
					this.SendPropertyChanging();
					this._Version_UKM = value;
					this.SendPropertyChanged("Version_UKM");
					this.OnVersion_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_PricesAkcionnie", Storage="_Good", ThisKey="GoodID", OtherKey="ID", IsForeignKey=true)]
		public Good Good
		{
			get
			{
				return this._Good.Entity;
			}
			set
			{
				Good previousValue = this._Good.Entity;
				if (((previousValue != value) 
							|| (this._Good.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Good.Entity = null;
						previousValue.PricesAkcionnies.Remove(this);
					}
					this._Good.Entity = value;
					if ((value != null))
					{
						value.PricesAkcionnies.Add(this);
						this._GoodID = value.ID;
					}
					else
					{
						this._GoodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Good");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private string _Type;
		
		private string _Message;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(250)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SettingsSAPERP")]
	public partial class SettingsSAPERPTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MessageServerHost;
		
		private string _LogonGroup;
		
		private string _SystemID;
		
		private string _SystemNumber;
		
		private string _SAPRouter;
		
		private string _SAPUser;
		
		private string _SAPPassword;
		
		private string _Client;
		
		private string _Werk;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMessageServerHostChanging(string value);
    partial void OnMessageServerHostChanged();
    partial void OnLogonGroupChanging(string value);
    partial void OnLogonGroupChanged();
    partial void OnSystemIDChanging(string value);
    partial void OnSystemIDChanged();
    partial void OnSystemNumberChanging(string value);
    partial void OnSystemNumberChanged();
    partial void OnSAPRouterChanging(string value);
    partial void OnSAPRouterChanged();
    partial void OnSAPUserChanging(string value);
    partial void OnSAPUserChanged();
    partial void OnSAPPasswordChanging(string value);
    partial void OnSAPPasswordChanged();
    partial void OnClientChanging(string value);
    partial void OnClientChanged();
    partial void OnWerkChanging(string value);
    partial void OnWerkChanged();
    #endregion
		
		public SettingsSAPERPTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageServerHost", DbType="NVarChar(50)")]
		public string MessageServerHost
		{
			get
			{
				return this._MessageServerHost;
			}
			set
			{
				if ((this._MessageServerHost != value))
				{
					this.OnMessageServerHostChanging(value);
					this.SendPropertyChanging();
					this._MessageServerHost = value;
					this.SendPropertyChanged("MessageServerHost");
					this.OnMessageServerHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogonGroup", DbType="NVarChar(50)")]
		public string LogonGroup
		{
			get
			{
				return this._LogonGroup;
			}
			set
			{
				if ((this._LogonGroup != value))
				{
					this.OnLogonGroupChanging(value);
					this.SendPropertyChanging();
					this._LogonGroup = value;
					this.SendPropertyChanged("LogonGroup");
					this.OnLogonGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemID", DbType="NVarChar(50)")]
		public string SystemID
		{
			get
			{
				return this._SystemID;
			}
			set
			{
				if ((this._SystemID != value))
				{
					this.OnSystemIDChanging(value);
					this.SendPropertyChanging();
					this._SystemID = value;
					this.SendPropertyChanged("SystemID");
					this.OnSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemNumber", DbType="NVarChar(50)")]
		public string SystemNumber
		{
			get
			{
				return this._SystemNumber;
			}
			set
			{
				if ((this._SystemNumber != value))
				{
					this.OnSystemNumberChanging(value);
					this.SendPropertyChanging();
					this._SystemNumber = value;
					this.SendPropertyChanged("SystemNumber");
					this.OnSystemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAPRouter", DbType="NVarChar(50)")]
		public string SAPRouter
		{
			get
			{
				return this._SAPRouter;
			}
			set
			{
				if ((this._SAPRouter != value))
				{
					this.OnSAPRouterChanging(value);
					this.SendPropertyChanging();
					this._SAPRouter = value;
					this.SendPropertyChanged("SAPRouter");
					this.OnSAPRouterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAPUser", DbType="NVarChar(50)")]
		public string SAPUser
		{
			get
			{
				return this._SAPUser;
			}
			set
			{
				if ((this._SAPUser != value))
				{
					this.OnSAPUserChanging(value);
					this.SendPropertyChanging();
					this._SAPUser = value;
					this.SendPropertyChanged("SAPUser");
					this.OnSAPUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAPPassword", DbType="NVarChar(50)")]
		public string SAPPassword
		{
			get
			{
				return this._SAPPassword;
			}
			set
			{
				if ((this._SAPPassword != value))
				{
					this.OnSAPPasswordChanging(value);
					this.SendPropertyChanging();
					this._SAPPassword = value;
					this.SendPropertyChanged("SAPPassword");
					this.OnSAPPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="NVarChar(50)")]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this.OnClientChanging(value);
					this.SendPropertyChanging();
					this._Client = value;
					this.SendPropertyChanged("Client");
					this.OnClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Werk", DbType="NVarChar(50)")]
		public string Werk
		{
			get
			{
				return this._Werk;
			}
			set
			{
				if ((this._Werk != value))
				{
					this.OnWerkChanging(value);
					this.SendPropertyChanging();
					this._Werk = value;
					this.SendPropertyChanged("Werk");
					this.OnWerkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UKMPriceTbl")]
	public partial class UKMPriceTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _LoadNum;
		
		private string _Artikul;
		
		private double _PriceUKM;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLoadNumChanging(System.Nullable<long> value);
    partial void OnLoadNumChanged();
    partial void OnArtikulChanging(string value);
    partial void OnArtikulChanged();
    partial void OnPriceUKMChanging(double value);
    partial void OnPriceUKMChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    #endregion
		
		public UKMPriceTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadNum", DbType="BigInt")]
		public System.Nullable<long> LoadNum
		{
			get
			{
				return this._LoadNum;
			}
			set
			{
				if ((this._LoadNum != value))
				{
					this.OnLoadNumChanging(value);
					this.SendPropertyChanging();
					this._LoadNum = value;
					this.SendPropertyChanged("LoadNum");
					this.OnLoadNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikul", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Artikul
		{
			get
			{
				return this._Artikul;
			}
			set
			{
				if ((this._Artikul != value))
				{
					this.OnArtikulChanging(value);
					this.SendPropertyChanging();
					this._Artikul = value;
					this.SendPropertyChanged("Artikul");
					this.OnArtikulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceUKM", DbType="Float NOT NULL")]
		public double PriceUKM
		{
			get
			{
				return this._PriceUKM;
			}
			set
			{
				if ((this._PriceUKM != value))
				{
					this.OnPriceUKMChanging(value);
					this.SendPropertyChanging();
					this._PriceUKM = value;
					this.SendPropertyChanged("PriceUKM");
					this.OnPriceUKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SAPPriceTbl")]
	public partial class SAPPriceTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _LoadNum;
		
		private string _MATNR;
		
		private double _KBETR;
		
		private string _KSCHL;
		
		private string _ASSORT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLoadNumChanging(long value);
    partial void OnLoadNumChanged();
    partial void OnMATNRChanging(string value);
    partial void OnMATNRChanged();
    partial void OnKBETRChanging(double value);
    partial void OnKBETRChanged();
    partial void OnKSCHLChanging(string value);
    partial void OnKSCHLChanged();
    partial void OnASSORTChanging(string value);
    partial void OnASSORTChanged();
    #endregion
		
		public SAPPriceTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadNum", DbType="BigInt NOT NULL")]
		public long LoadNum
		{
			get
			{
				return this._LoadNum;
			}
			set
			{
				if ((this._LoadNum != value))
				{
					this.OnLoadNumChanging(value);
					this.SendPropertyChanging();
					this._LoadNum = value;
					this.SendPropertyChanged("LoadNum");
					this.OnLoadNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATNR", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string MATNR
		{
			get
			{
				return this._MATNR;
			}
			set
			{
				if ((this._MATNR != value))
				{
					this.OnMATNRChanging(value);
					this.SendPropertyChanging();
					this._MATNR = value;
					this.SendPropertyChanged("MATNR");
					this.OnMATNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KBETR", DbType="Float NOT NULL")]
		public double KBETR
		{
			get
			{
				return this._KBETR;
			}
			set
			{
				if ((this._KBETR != value))
				{
					this.OnKBETRChanging(value);
					this.SendPropertyChanging();
					this._KBETR = value;
					this.SendPropertyChanged("KBETR");
					this.OnKBETRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSCHL", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string KSCHL
		{
			get
			{
				return this._KSCHL;
			}
			set
			{
				if ((this._KSCHL != value))
				{
					this.OnKSCHLChanging(value);
					this.SendPropertyChanging();
					this._KSCHL = value;
					this.SendPropertyChanged("KSCHL");
					this.OnKSCHLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASSORT", DbType="NVarChar(1)")]
		public string ASSORT
		{
			get
			{
				return this._ASSORT;
			}
			set
			{
				if ((this._ASSORT != value))
				{
					this.OnASSORTChanging(value);
					this.SendPropertyChanging();
					this._ASSORT = value;
					this.SendPropertyChanged("ASSORT");
					this.OnASSORTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SAPOUT_REST")]
	public partial class SAPOUT_REST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _LoadNum;
		
		private string _MATNR;
		
		private string _MAKTX;
		
		private string _LGORT;
		
		private System.Nullable<double> _LABST;
		
		private string _MEINS;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLoadNumChanging(System.Nullable<long> value);
    partial void OnLoadNumChanged();
    partial void OnMATNRChanging(string value);
    partial void OnMATNRChanged();
    partial void OnMAKTXChanging(string value);
    partial void OnMAKTXChanged();
    partial void OnLGORTChanging(string value);
    partial void OnLGORTChanged();
    partial void OnLABSTChanging(System.Nullable<double> value);
    partial void OnLABSTChanged();
    partial void OnMEINSChanging(string value);
    partial void OnMEINSChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    #endregion
		
		public SAPOUT_REST()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadNum", DbType="BigInt")]
		public System.Nullable<long> LoadNum
		{
			get
			{
				return this._LoadNum;
			}
			set
			{
				if ((this._LoadNum != value))
				{
					this.OnLoadNumChanging(value);
					this.SendPropertyChanging();
					this._LoadNum = value;
					this.SendPropertyChanged("LoadNum");
					this.OnLoadNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATNR", DbType="NVarChar(18)")]
		public string MATNR
		{
			get
			{
				return this._MATNR;
			}
			set
			{
				if ((this._MATNR != value))
				{
					this.OnMATNRChanging(value);
					this.SendPropertyChanging();
					this._MATNR = value;
					this.SendPropertyChanged("MATNR");
					this.OnMATNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKTX", DbType="NVarChar(40)")]
		public string MAKTX
		{
			get
			{
				return this._MAKTX;
			}
			set
			{
				if ((this._MAKTX != value))
				{
					this.OnMAKTXChanging(value);
					this.SendPropertyChanging();
					this._MAKTX = value;
					this.SendPropertyChanged("MAKTX");
					this.OnMAKTXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LGORT", DbType="NVarChar(4)")]
		public string LGORT
		{
			get
			{
				return this._LGORT;
			}
			set
			{
				if ((this._LGORT != value))
				{
					this.OnLGORTChanging(value);
					this.SendPropertyChanging();
					this._LGORT = value;
					this.SendPropertyChanged("LGORT");
					this.OnLGORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LABST", DbType="Float")]
		public System.Nullable<double> LABST
		{
			get
			{
				return this._LABST;
			}
			set
			{
				if ((this._LABST != value))
				{
					this.OnLABSTChanging(value);
					this.SendPropertyChanging();
					this._LABST = value;
					this.SendPropertyChanged("LABST");
					this.OnLABSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEINS", DbType="NVarChar(3)")]
		public string MEINS
		{
			get
			{
				return this._MEINS;
			}
			set
			{
				if ((this._MEINS != value))
				{
					this.OnMEINSChanging(value);
					this.SendPropertyChanging();
					this._MEINS = value;
					this.SendPropertyChanged("MEINS");
					this.OnMEINSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SAPOUT_SMENA")]
	public partial class SAPOUT_SMENA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _LoadNum;
		
		private System.Nullable<System.DateTime> _SM_DATE;
		
		private string _SMENA;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLoadNumChanging(System.Nullable<long> value);
    partial void OnLoadNumChanged();
    partial void OnSM_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSM_DATEChanged();
    partial void OnSMENAChanging(string value);
    partial void OnSMENAChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    #endregion
		
		public SAPOUT_SMENA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadNum", DbType="BigInt")]
		public System.Nullable<long> LoadNum
		{
			get
			{
				return this._LoadNum;
			}
			set
			{
				if ((this._LoadNum != value))
				{
					this.OnLoadNumChanging(value);
					this.SendPropertyChanging();
					this._LoadNum = value;
					this.SendPropertyChanged("LoadNum");
					this.OnLoadNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SM_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> SM_DATE
		{
			get
			{
				return this._SM_DATE;
			}
			set
			{
				if ((this._SM_DATE != value))
				{
					this.OnSM_DATEChanging(value);
					this.SendPropertyChanging();
					this._SM_DATE = value;
					this.SendPropertyChanged("SM_DATE");
					this.OnSM_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMENA", DbType="NVarChar(15)")]
		public string SMENA
		{
			get
			{
				return this._SMENA;
			}
			set
			{
				if ((this._SMENA != value))
				{
					this.OnSMENAChanging(value);
					this.SendPropertyChanging();
					this._SMENA = value;
					this.SendPropertyChanged("SMENA");
					this.OnSMENAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UKMSoldGoods")]
	public partial class UKMSoldGoods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _LoadNum;
		
		private string _Casher;
		
		private string _POSN;
		
		private string _CASH;
		
		private string _Smena;
		
		private string _KassaSmena;
		
		private string _Artikul;
		
		private string _GoodName;
		
		private string _ClassifId;
		
		private string _ClassifName;
		
		private System.Nullable<double> _Sold;
		
		private System.Nullable<double> _Summ;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLoadNumChanging(System.Nullable<long> value);
    partial void OnLoadNumChanged();
    partial void OnCasherChanging(string value);
    partial void OnCasherChanged();
    partial void OnPOSNChanging(string value);
    partial void OnPOSNChanged();
    partial void OnCASHChanging(string value);
    partial void OnCASHChanged();
    partial void OnSmenaChanging(string value);
    partial void OnSmenaChanged();
    partial void OnKassaSmenaChanging(string value);
    partial void OnKassaSmenaChanged();
    partial void OnArtikulChanging(string value);
    partial void OnArtikulChanged();
    partial void OnGoodNameChanging(string value);
    partial void OnGoodNameChanged();
    partial void OnClassifIdChanging(string value);
    partial void OnClassifIdChanged();
    partial void OnClassifNameChanging(string value);
    partial void OnClassifNameChanged();
    partial void OnSoldChanging(System.Nullable<double> value);
    partial void OnSoldChanged();
    partial void OnSummChanging(System.Nullable<double> value);
    partial void OnSummChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    #endregion
		
		public UKMSoldGoods()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadNum", DbType="BigInt")]
		public System.Nullable<long> LoadNum
		{
			get
			{
				return this._LoadNum;
			}
			set
			{
				if ((this._LoadNum != value))
				{
					this.OnLoadNumChanging(value);
					this.SendPropertyChanging();
					this._LoadNum = value;
					this.SendPropertyChanged("LoadNum");
					this.OnLoadNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Casher", DbType="NVarChar(50)")]
		public string Casher
		{
			get
			{
				return this._Casher;
			}
			set
			{
				if ((this._Casher != value))
				{
					this.OnCasherChanging(value);
					this.SendPropertyChanging();
					this._Casher = value;
					this.SendPropertyChanged("Casher");
					this.OnCasherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSN", DbType="NVarChar(50)")]
		public string POSN
		{
			get
			{
				return this._POSN;
			}
			set
			{
				if ((this._POSN != value))
				{
					this.OnPOSNChanging(value);
					this.SendPropertyChanging();
					this._POSN = value;
					this.SendPropertyChanged("POSN");
					this.OnPOSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH", DbType="NVarChar(50)")]
		public string CASH
		{
			get
			{
				return this._CASH;
			}
			set
			{
				if ((this._CASH != value))
				{
					this.OnCASHChanging(value);
					this.SendPropertyChanging();
					this._CASH = value;
					this.SendPropertyChanged("CASH");
					this.OnCASHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Smena", DbType="NVarChar(50)")]
		public string Smena
		{
			get
			{
				return this._Smena;
			}
			set
			{
				if ((this._Smena != value))
				{
					this.OnSmenaChanging(value);
					this.SendPropertyChanging();
					this._Smena = value;
					this.SendPropertyChanged("Smena");
					this.OnSmenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KassaSmena", DbType="NVarChar(15)")]
		public string KassaSmena
		{
			get
			{
				return this._KassaSmena;
			}
			set
			{
				if ((this._KassaSmena != value))
				{
					this.OnKassaSmenaChanging(value);
					this.SendPropertyChanging();
					this._KassaSmena = value;
					this.SendPropertyChanged("KassaSmena");
					this.OnKassaSmenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikul", DbType="NVarChar(18)")]
		public string Artikul
		{
			get
			{
				return this._Artikul;
			}
			set
			{
				if ((this._Artikul != value))
				{
					this.OnArtikulChanging(value);
					this.SendPropertyChanging();
					this._Artikul = value;
					this.SendPropertyChanged("Artikul");
					this.OnArtikulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodName", DbType="NVarChar(250)")]
		public string GoodName
		{
			get
			{
				return this._GoodName;
			}
			set
			{
				if ((this._GoodName != value))
				{
					this.OnGoodNameChanging(value);
					this.SendPropertyChanging();
					this._GoodName = value;
					this.SendPropertyChanged("GoodName");
					this.OnGoodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifId", DbType="NVarChar(50)")]
		public string ClassifId
		{
			get
			{
				return this._ClassifId;
			}
			set
			{
				if ((this._ClassifId != value))
				{
					this.OnClassifIdChanging(value);
					this.SendPropertyChanging();
					this._ClassifId = value;
					this.SendPropertyChanged("ClassifId");
					this.OnClassifIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassifName", DbType="NVarChar(250)")]
		public string ClassifName
		{
			get
			{
				return this._ClassifName;
			}
			set
			{
				if ((this._ClassifName != value))
				{
					this.OnClassifNameChanging(value);
					this.SendPropertyChanging();
					this._ClassifName = value;
					this.SendPropertyChanged("ClassifName");
					this.OnClassifNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sold", DbType="Float")]
		public System.Nullable<double> Sold
		{
			get
			{
				return this._Sold;
			}
			set
			{
				if ((this._Sold != value))
				{
					this.OnSoldChanging(value);
					this.SendPropertyChanging();
					this._Sold = value;
					this.SendPropertyChanged("Sold");
					this.OnSoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summ", DbType="Float")]
		public System.Nullable<double> Summ
		{
			get
			{
				return this._Summ;
			}
			set
			{
				if ((this._Summ != value))
				{
					this.OnSummChanging(value);
					this.SendPropertyChanging();
					this._Summ = value;
					this.SendPropertyChanged("Summ");
					this.OnSummChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _A4ShirinaMM;
		
		private System.Nullable<int> _A4VisotaMM;
		
		private System.Nullable<bool> _ResizeBarcodes;
		
		private System.Nullable<bool> _PrintTermoLabelPrice;
		
		private System.Nullable<int> _PrintTermoLabelVisotaMM;
		
		private System.Nullable<int> _PrintTermoLabelShirinaMM;
		
		private System.Nullable<int> _PrintTermoLabelProizvodstvoVisotaMM;
		
		private System.Nullable<int> _PrintTermoLabelProizvodstvoShirinaMM;
		
		private string _TermoPrinterPort;
		
		private string _TermoPrinterNetPath;
		
		private string _MobileTermoPrinterPort;
		
		private string _MobileTermoPrinterNetPath;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnA4ShirinaMMChanging(System.Nullable<int> value);
    partial void OnA4ShirinaMMChanged();
    partial void OnA4VisotaMMChanging(System.Nullable<int> value);
    partial void OnA4VisotaMMChanged();
    partial void OnResizeBarcodesChanging(System.Nullable<bool> value);
    partial void OnResizeBarcodesChanged();
    partial void OnPrintTermoLabelPriceChanging(System.Nullable<bool> value);
    partial void OnPrintTermoLabelPriceChanged();
    partial void OnPrintTermoLabelVisotaMMChanging(System.Nullable<int> value);
    partial void OnPrintTermoLabelVisotaMMChanged();
    partial void OnPrintTermoLabelShirinaMMChanging(System.Nullable<int> value);
    partial void OnPrintTermoLabelShirinaMMChanged();
    partial void OnPrintTermoLabelProizvodstvoVisotaMMChanging(System.Nullable<int> value);
    partial void OnPrintTermoLabelProizvodstvoVisotaMMChanged();
    partial void OnPrintTermoLabelProizvodstvoShirinaMMChanging(System.Nullable<int> value);
    partial void OnPrintTermoLabelProizvodstvoShirinaMMChanged();
    partial void OnTermoPrinterPortChanging(string value);
    partial void OnTermoPrinterPortChanged();
    partial void OnTermoPrinterNetPathChanging(string value);
    partial void OnTermoPrinterNetPathChanged();
    partial void OnMobileTermoPrinterPortChanging(string value);
    partial void OnMobileTermoPrinterPortChanged();
    partial void OnMobileTermoPrinterNetPathChanging(string value);
    partial void OnMobileTermoPrinterNetPathChanged();
    #endregion
		
		public Settings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A4ShirinaMM", DbType="Int")]
		public System.Nullable<int> A4ShirinaMM
		{
			get
			{
				return this._A4ShirinaMM;
			}
			set
			{
				if ((this._A4ShirinaMM != value))
				{
					this.OnA4ShirinaMMChanging(value);
					this.SendPropertyChanging();
					this._A4ShirinaMM = value;
					this.SendPropertyChanged("A4ShirinaMM");
					this.OnA4ShirinaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A4VisotaMM", DbType="Int")]
		public System.Nullable<int> A4VisotaMM
		{
			get
			{
				return this._A4VisotaMM;
			}
			set
			{
				if ((this._A4VisotaMM != value))
				{
					this.OnA4VisotaMMChanging(value);
					this.SendPropertyChanging();
					this._A4VisotaMM = value;
					this.SendPropertyChanged("A4VisotaMM");
					this.OnA4VisotaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResizeBarcodes", DbType="Bit")]
		public System.Nullable<bool> ResizeBarcodes
		{
			get
			{
				return this._ResizeBarcodes;
			}
			set
			{
				if ((this._ResizeBarcodes != value))
				{
					this.OnResizeBarcodesChanging(value);
					this.SendPropertyChanging();
					this._ResizeBarcodes = value;
					this.SendPropertyChanged("ResizeBarcodes");
					this.OnResizeBarcodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTermoLabelPrice", DbType="Bit")]
		public System.Nullable<bool> PrintTermoLabelPrice
		{
			get
			{
				return this._PrintTermoLabelPrice;
			}
			set
			{
				if ((this._PrintTermoLabelPrice != value))
				{
					this.OnPrintTermoLabelPriceChanging(value);
					this.SendPropertyChanging();
					this._PrintTermoLabelPrice = value;
					this.SendPropertyChanged("PrintTermoLabelPrice");
					this.OnPrintTermoLabelPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTermoLabelVisotaMM", DbType="Int")]
		public System.Nullable<int> PrintTermoLabelVisotaMM
		{
			get
			{
				return this._PrintTermoLabelVisotaMM;
			}
			set
			{
				if ((this._PrintTermoLabelVisotaMM != value))
				{
					this.OnPrintTermoLabelVisotaMMChanging(value);
					this.SendPropertyChanging();
					this._PrintTermoLabelVisotaMM = value;
					this.SendPropertyChanged("PrintTermoLabelVisotaMM");
					this.OnPrintTermoLabelVisotaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTermoLabelShirinaMM", DbType="Int")]
		public System.Nullable<int> PrintTermoLabelShirinaMM
		{
			get
			{
				return this._PrintTermoLabelShirinaMM;
			}
			set
			{
				if ((this._PrintTermoLabelShirinaMM != value))
				{
					this.OnPrintTermoLabelShirinaMMChanging(value);
					this.SendPropertyChanging();
					this._PrintTermoLabelShirinaMM = value;
					this.SendPropertyChanged("PrintTermoLabelShirinaMM");
					this.OnPrintTermoLabelShirinaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTermoLabelProizvodstvoVisotaMM", DbType="Int")]
		public System.Nullable<int> PrintTermoLabelProizvodstvoVisotaMM
		{
			get
			{
				return this._PrintTermoLabelProizvodstvoVisotaMM;
			}
			set
			{
				if ((this._PrintTermoLabelProizvodstvoVisotaMM != value))
				{
					this.OnPrintTermoLabelProizvodstvoVisotaMMChanging(value);
					this.SendPropertyChanging();
					this._PrintTermoLabelProizvodstvoVisotaMM = value;
					this.SendPropertyChanged("PrintTermoLabelProizvodstvoVisotaMM");
					this.OnPrintTermoLabelProizvodstvoVisotaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTermoLabelProizvodstvoShirinaMM", DbType="Int")]
		public System.Nullable<int> PrintTermoLabelProizvodstvoShirinaMM
		{
			get
			{
				return this._PrintTermoLabelProizvodstvoShirinaMM;
			}
			set
			{
				if ((this._PrintTermoLabelProizvodstvoShirinaMM != value))
				{
					this.OnPrintTermoLabelProizvodstvoShirinaMMChanging(value);
					this.SendPropertyChanging();
					this._PrintTermoLabelProizvodstvoShirinaMM = value;
					this.SendPropertyChanged("PrintTermoLabelProizvodstvoShirinaMM");
					this.OnPrintTermoLabelProizvodstvoShirinaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermoPrinterPort", DbType="NVarChar(50)")]
		public string TermoPrinterPort
		{
			get
			{
				return this._TermoPrinterPort;
			}
			set
			{
				if ((this._TermoPrinterPort != value))
				{
					this.OnTermoPrinterPortChanging(value);
					this.SendPropertyChanging();
					this._TermoPrinterPort = value;
					this.SendPropertyChanged("TermoPrinterPort");
					this.OnTermoPrinterPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermoPrinterNetPath", DbType="NVarChar(MAX)")]
		public string TermoPrinterNetPath
		{
			get
			{
				return this._TermoPrinterNetPath;
			}
			set
			{
				if ((this._TermoPrinterNetPath != value))
				{
					this.OnTermoPrinterNetPathChanging(value);
					this.SendPropertyChanging();
					this._TermoPrinterNetPath = value;
					this.SendPropertyChanged("TermoPrinterNetPath");
					this.OnTermoPrinterNetPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileTermoPrinterPort", DbType="NVarChar(50)")]
		public string MobileTermoPrinterPort
		{
			get
			{
				return this._MobileTermoPrinterPort;
			}
			set
			{
				if ((this._MobileTermoPrinterPort != value))
				{
					this.OnMobileTermoPrinterPortChanging(value);
					this.SendPropertyChanging();
					this._MobileTermoPrinterPort = value;
					this.SendPropertyChanged("MobileTermoPrinterPort");
					this.OnMobileTermoPrinterPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileTermoPrinterNetPath", DbType="NVarChar(MAX)")]
		public string MobileTermoPrinterNetPath
		{
			get
			{
				return this._MobileTermoPrinterNetPath;
			}
			set
			{
				if ((this._MobileTermoPrinterNetPath != value))
				{
					this.OnMobileTermoPrinterNetPathChanging(value);
					this.SendPropertyChanging();
					this._MobileTermoPrinterNetPath = value;
					this.SendPropertyChanged("MobileTermoPrinterNetPath");
					this.OnMobileTermoPrinterNetPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TermoCennicQuoue")]
	public partial class TermoCennicQuoue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _JournalID;
		
		private System.Nullable<int> _GoodID;
		
		private System.Nullable<int> _TermoCennicID;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Good> _Good;
		
		private EntityRef<PriceChangeJour> _PriceChangeJour;
		
		private EntityRef<TermoCennic> _TermoCennic;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJournalIDChanging(System.Nullable<int> value);
    partial void OnJournalIDChanged();
    partial void OnGoodIDChanging(System.Nullable<int> value);
    partial void OnGoodIDChanged();
    partial void OnTermoCennicIDChanging(System.Nullable<int> value);
    partial void OnTermoCennicIDChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public TermoCennicQuoue()
		{
			this._Good = default(EntityRef<Good>);
			this._PriceChangeJour = default(EntityRef<PriceChangeJour>);
			this._TermoCennic = default(EntityRef<TermoCennic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", DbType="Int")]
		public System.Nullable<int> JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					if (this._PriceChangeJour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodID", DbType="Int")]
		public System.Nullable<int> GoodID
		{
			get
			{
				return this._GoodID;
			}
			set
			{
				if ((this._GoodID != value))
				{
					if (this._Good.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoodIDChanging(value);
					this.SendPropertyChanging();
					this._GoodID = value;
					this.SendPropertyChanged("GoodID");
					this.OnGoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermoCennicID", DbType="Int")]
		public System.Nullable<int> TermoCennicID
		{
			get
			{
				return this._TermoCennicID;
			}
			set
			{
				if ((this._TermoCennicID != value))
				{
					if (this._TermoCennic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermoCennicIDChanging(value);
					this.SendPropertyChanging();
					this._TermoCennicID = value;
					this.SendPropertyChanged("TermoCennicID");
					this.OnTermoCennicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_TermoCennicQuoue", Storage="_Good", ThisKey="GoodID", OtherKey="ID", IsForeignKey=true)]
		public Good Good
		{
			get
			{
				return this._Good.Entity;
			}
			set
			{
				Good previousValue = this._Good.Entity;
				if (((previousValue != value) 
							|| (this._Good.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Good.Entity = null;
						previousValue.TermoCennicQuoue.Remove(this);
					}
					this._Good.Entity = value;
					if ((value != null))
					{
						value.TermoCennicQuoue.Add(this);
						this._GoodID = value.ID;
					}
					else
					{
						this._GoodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Good");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceChangeJour_TermoCennicQuoue", Storage="_PriceChangeJour", ThisKey="JournalID", OtherKey="ID", IsForeignKey=true)]
		public PriceChangeJour PriceChangeJour
		{
			get
			{
				return this._PriceChangeJour.Entity;
			}
			set
			{
				PriceChangeJour previousValue = this._PriceChangeJour.Entity;
				if (((previousValue != value) 
							|| (this._PriceChangeJour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceChangeJour.Entity = null;
						previousValue.TermoCennicQuoue.Remove(this);
					}
					this._PriceChangeJour.Entity = value;
					if ((value != null))
					{
						value.TermoCennicQuoue.Add(this);
						this._JournalID = value.ID;
					}
					else
					{
						this._JournalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PriceChangeJour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TermoCennic_TermoCennicQuoue", Storage="_TermoCennic", ThisKey="TermoCennicID", OtherKey="ID", IsForeignKey=true)]
		public TermoCennic TermoCennic
		{
			get
			{
				return this._TermoCennic.Entity;
			}
			set
			{
				TermoCennic previousValue = this._TermoCennic.Entity;
				if (((previousValue != value) 
							|| (this._TermoCennic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TermoCennic.Entity = null;
						previousValue.TermoCennicQuoue.Remove(this);
					}
					this._TermoCennic.Entity = value;
					if ((value != null))
					{
						value.TermoCennicQuoue.Add(this);
						this._TermoCennicID = value.ID;
					}
					else
					{
						this._TermoCennicID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TermoCennic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TermoCennic")]
	public partial class TermoCennic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _FileLabelName;
		
		private System.Nullable<int> _GoodNameVStroke;
		
		private System.Nullable<int> _ContentsVStroke;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<TermoCennicQuoue> _TermoCennicQuoue;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileLabelNameChanging(string value);
    partial void OnFileLabelNameChanged();
    partial void OnGoodNameVStrokeChanging(System.Nullable<int> value);
    partial void OnGoodNameVStrokeChanged();
    partial void OnContentsVStrokeChanging(System.Nullable<int> value);
    partial void OnContentsVStrokeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public TermoCennic()
		{
			this._TermoCennicQuoue = new EntitySet<TermoCennicQuoue>(new Action<TermoCennicQuoue>(this.attach_TermoCennicQuoue), new Action<TermoCennicQuoue>(this.detach_TermoCennicQuoue));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileLabelName", DbType="NVarChar(MAX)")]
		public string FileLabelName
		{
			get
			{
				return this._FileLabelName;
			}
			set
			{
				if ((this._FileLabelName != value))
				{
					this.OnFileLabelNameChanging(value);
					this.SendPropertyChanging();
					this._FileLabelName = value;
					this.SendPropertyChanged("FileLabelName");
					this.OnFileLabelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodNameVStroke", DbType="Int")]
		public System.Nullable<int> GoodNameVStroke
		{
			get
			{
				return this._GoodNameVStroke;
			}
			set
			{
				if ((this._GoodNameVStroke != value))
				{
					this.OnGoodNameVStrokeChanging(value);
					this.SendPropertyChanging();
					this._GoodNameVStroke = value;
					this.SendPropertyChanged("GoodNameVStroke");
					this.OnGoodNameVStrokeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentsVStroke", DbType="Int")]
		public System.Nullable<int> ContentsVStroke
		{
			get
			{
				return this._ContentsVStroke;
			}
			set
			{
				if ((this._ContentsVStroke != value))
				{
					this.OnContentsVStrokeChanging(value);
					this.SendPropertyChanging();
					this._ContentsVStroke = value;
					this.SendPropertyChanged("ContentsVStroke");
					this.OnContentsVStrokeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TermoCennic_TermoCennicQuoue", Storage="_TermoCennicQuoue", ThisKey="ID", OtherKey="TermoCennicID")]
		public EntitySet<TermoCennicQuoue> TermoCennicQuoue
		{
			get
			{
				return this._TermoCennicQuoue;
			}
			set
			{
				this._TermoCennicQuoue.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TermoCennicQuoue(TermoCennicQuoue entity)
		{
			this.SendPropertyChanging();
			entity.TermoCennic = this;
		}
		
		private void detach_TermoCennicQuoue(TermoCennicQuoue entity)
		{
			this.SendPropertyChanging();
			entity.TermoCennic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreInfoExt")]
	public partial class StoreInfoExt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _OsnPriceType_ID_UKM;
		
		private System.Nullable<int> _OsnPriceList_ID_UKM;
		
		private string _OsnPriceListName_UKM;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOsnPriceType_ID_UKMChanging(string value);
    partial void OnOsnPriceType_ID_UKMChanged();
    partial void OnOsnPriceList_ID_UKMChanging(System.Nullable<int> value);
    partial void OnOsnPriceList_ID_UKMChanged();
    partial void OnOsnPriceListName_UKMChanging(string value);
    partial void OnOsnPriceListName_UKMChanged();
    #endregion
		
		public StoreInfoExt()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsnPriceType_ID_UKM", DbType="NVarChar(38)")]
		public string OsnPriceType_ID_UKM
		{
			get
			{
				return this._OsnPriceType_ID_UKM;
			}
			set
			{
				if ((this._OsnPriceType_ID_UKM != value))
				{
					this.OnOsnPriceType_ID_UKMChanging(value);
					this.SendPropertyChanging();
					this._OsnPriceType_ID_UKM = value;
					this.SendPropertyChanged("OsnPriceType_ID_UKM");
					this.OnOsnPriceType_ID_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsnPriceList_ID_UKM", DbType="Int")]
		public System.Nullable<int> OsnPriceList_ID_UKM
		{
			get
			{
				return this._OsnPriceList_ID_UKM;
			}
			set
			{
				if ((this._OsnPriceList_ID_UKM != value))
				{
					this.OnOsnPriceList_ID_UKMChanging(value);
					this.SendPropertyChanging();
					this._OsnPriceList_ID_UKM = value;
					this.SendPropertyChanged("OsnPriceList_ID_UKM");
					this.OnOsnPriceList_ID_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsnPriceListName_UKM", DbType="NVarChar(100)")]
		public string OsnPriceListName_UKM
		{
			get
			{
				return this._OsnPriceListName_UKM;
			}
			set
			{
				if ((this._OsnPriceListName_UKM != value))
				{
					this.OnOsnPriceListName_UKMChanging(value);
					this.SendPropertyChanging();
					this._OsnPriceListName_UKM = value;
					this.SendPropertyChanged("OsnPriceListName_UKM");
					this.OnOsnPriceListName_UKMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintTemplatesExt")]
	public partial class PrintTemplatesExt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PrintTemplateID;
		
		private string _SlovoCena;
		
		private System.Nullable<int> _SlovoCenaFontWeight;
		
		private System.Nullable<int> _SlovoCenaX;
		
		private System.Nullable<int> _SlovoCenaY;
		
		private string _DopText;
		
		private System.Nullable<int> _DopTextFontWeight;
		
		private System.Nullable<int> _DopTextX;
		
		private System.Nullable<int> _DopTextY;
		
		private string _SlovoObichCena;
		
		private System.Nullable<int> _SlovoObichCenaFontWeight;
		
		private System.Nullable<int> _SlovoObichCenaX;
		
		private System.Nullable<int> _SlovoObichCenaY;
		
		private System.Nullable<bool> _MalenkiyBarcode;
		
		private EntityRef<PrintTemplates> _PrintTemplates;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPrintTemplateIDChanging(System.Nullable<int> value);
    partial void OnPrintTemplateIDChanged();
    partial void OnSlovoCenaChanging(string value);
    partial void OnSlovoCenaChanged();
    partial void OnSlovoCenaFontWeightChanging(System.Nullable<int> value);
    partial void OnSlovoCenaFontWeightChanged();
    partial void OnSlovoCenaXChanging(System.Nullable<int> value);
    partial void OnSlovoCenaXChanged();
    partial void OnSlovoCenaYChanging(System.Nullable<int> value);
    partial void OnSlovoCenaYChanged();
    partial void OnDopTextChanging(string value);
    partial void OnDopTextChanged();
    partial void OnDopTextFontWeightChanging(System.Nullable<int> value);
    partial void OnDopTextFontWeightChanged();
    partial void OnDopTextXChanging(System.Nullable<int> value);
    partial void OnDopTextXChanged();
    partial void OnDopTextYChanging(System.Nullable<int> value);
    partial void OnDopTextYChanged();
    partial void OnSlovoObichCenaChanging(string value);
    partial void OnSlovoObichCenaChanged();
    partial void OnSlovoObichCenaFontWeightChanging(System.Nullable<int> value);
    partial void OnSlovoObichCenaFontWeightChanged();
    partial void OnSlovoObichCenaXChanging(System.Nullable<int> value);
    partial void OnSlovoObichCenaXChanged();
    partial void OnSlovoObichCenaYChanging(System.Nullable<int> value);
    partial void OnSlovoObichCenaYChanged();
    partial void OnMalenkiyBarcodeChanging(System.Nullable<bool> value);
    partial void OnMalenkiyBarcodeChanged();
    #endregion
		
		public PrintTemplatesExt()
		{
			this._PrintTemplates = default(EntityRef<PrintTemplates>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTemplateID", DbType="Int")]
		public System.Nullable<int> PrintTemplateID
		{
			get
			{
				return this._PrintTemplateID;
			}
			set
			{
				if ((this._PrintTemplateID != value))
				{
					if (this._PrintTemplates.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrintTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._PrintTemplateID = value;
					this.SendPropertyChanged("PrintTemplateID");
					this.OnPrintTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoCena", DbType="NVarChar(100)")]
		public string SlovoCena
		{
			get
			{
				return this._SlovoCena;
			}
			set
			{
				if ((this._SlovoCena != value))
				{
					this.OnSlovoCenaChanging(value);
					this.SendPropertyChanging();
					this._SlovoCena = value;
					this.SendPropertyChanged("SlovoCena");
					this.OnSlovoCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoCenaFontWeight", DbType="Int")]
		public System.Nullable<int> SlovoCenaFontWeight
		{
			get
			{
				return this._SlovoCenaFontWeight;
			}
			set
			{
				if ((this._SlovoCenaFontWeight != value))
				{
					this.OnSlovoCenaFontWeightChanging(value);
					this.SendPropertyChanging();
					this._SlovoCenaFontWeight = value;
					this.SendPropertyChanged("SlovoCenaFontWeight");
					this.OnSlovoCenaFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoCenaX", DbType="Int")]
		public System.Nullable<int> SlovoCenaX
		{
			get
			{
				return this._SlovoCenaX;
			}
			set
			{
				if ((this._SlovoCenaX != value))
				{
					this.OnSlovoCenaXChanging(value);
					this.SendPropertyChanging();
					this._SlovoCenaX = value;
					this.SendPropertyChanged("SlovoCenaX");
					this.OnSlovoCenaXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoCenaY", DbType="Int")]
		public System.Nullable<int> SlovoCenaY
		{
			get
			{
				return this._SlovoCenaY;
			}
			set
			{
				if ((this._SlovoCenaY != value))
				{
					this.OnSlovoCenaYChanging(value);
					this.SendPropertyChanging();
					this._SlovoCenaY = value;
					this.SendPropertyChanged("SlovoCenaY");
					this.OnSlovoCenaYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DopText", DbType="NVarChar(250)")]
		public string DopText
		{
			get
			{
				return this._DopText;
			}
			set
			{
				if ((this._DopText != value))
				{
					this.OnDopTextChanging(value);
					this.SendPropertyChanging();
					this._DopText = value;
					this.SendPropertyChanged("DopText");
					this.OnDopTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DopTextFontWeight", DbType="Int")]
		public System.Nullable<int> DopTextFontWeight
		{
			get
			{
				return this._DopTextFontWeight;
			}
			set
			{
				if ((this._DopTextFontWeight != value))
				{
					this.OnDopTextFontWeightChanging(value);
					this.SendPropertyChanging();
					this._DopTextFontWeight = value;
					this.SendPropertyChanged("DopTextFontWeight");
					this.OnDopTextFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DopTextX", DbType="Int")]
		public System.Nullable<int> DopTextX
		{
			get
			{
				return this._DopTextX;
			}
			set
			{
				if ((this._DopTextX != value))
				{
					this.OnDopTextXChanging(value);
					this.SendPropertyChanging();
					this._DopTextX = value;
					this.SendPropertyChanged("DopTextX");
					this.OnDopTextXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DopTextY", DbType="Int")]
		public System.Nullable<int> DopTextY
		{
			get
			{
				return this._DopTextY;
			}
			set
			{
				if ((this._DopTextY != value))
				{
					this.OnDopTextYChanging(value);
					this.SendPropertyChanging();
					this._DopTextY = value;
					this.SendPropertyChanged("DopTextY");
					this.OnDopTextYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoObichCena", DbType="NVarChar(150)")]
		public string SlovoObichCena
		{
			get
			{
				return this._SlovoObichCena;
			}
			set
			{
				if ((this._SlovoObichCena != value))
				{
					this.OnSlovoObichCenaChanging(value);
					this.SendPropertyChanging();
					this._SlovoObichCena = value;
					this.SendPropertyChanged("SlovoObichCena");
					this.OnSlovoObichCenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoObichCenaFontWeight", DbType="Int")]
		public System.Nullable<int> SlovoObichCenaFontWeight
		{
			get
			{
				return this._SlovoObichCenaFontWeight;
			}
			set
			{
				if ((this._SlovoObichCenaFontWeight != value))
				{
					this.OnSlovoObichCenaFontWeightChanging(value);
					this.SendPropertyChanging();
					this._SlovoObichCenaFontWeight = value;
					this.SendPropertyChanged("SlovoObichCenaFontWeight");
					this.OnSlovoObichCenaFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoObichCenaX", DbType="Int")]
		public System.Nullable<int> SlovoObichCenaX
		{
			get
			{
				return this._SlovoObichCenaX;
			}
			set
			{
				if ((this._SlovoObichCenaX != value))
				{
					this.OnSlovoObichCenaXChanging(value);
					this.SendPropertyChanging();
					this._SlovoObichCenaX = value;
					this.SendPropertyChanged("SlovoObichCenaX");
					this.OnSlovoObichCenaXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoObichCenaY", DbType="Int")]
		public System.Nullable<int> SlovoObichCenaY
		{
			get
			{
				return this._SlovoObichCenaY;
			}
			set
			{
				if ((this._SlovoObichCenaY != value))
				{
					this.OnSlovoObichCenaYChanging(value);
					this.SendPropertyChanging();
					this._SlovoObichCenaY = value;
					this.SendPropertyChanged("SlovoObichCenaY");
					this.OnSlovoObichCenaYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MalenkiyBarcode", DbType="Bit")]
		public System.Nullable<bool> MalenkiyBarcode
		{
			get
			{
				return this._MalenkiyBarcode;
			}
			set
			{
				if ((this._MalenkiyBarcode != value))
				{
					this.OnMalenkiyBarcodeChanging(value);
					this.SendPropertyChanging();
					this._MalenkiyBarcode = value;
					this.SendPropertyChanged("MalenkiyBarcode");
					this.OnMalenkiyBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTemplates_PrintTemplatesExt", Storage="_PrintTemplates", ThisKey="PrintTemplateID", OtherKey="ID", IsForeignKey=true)]
		public PrintTemplates PrintTemplates
		{
			get
			{
				return this._PrintTemplates.Entity;
			}
			set
			{
				PrintTemplates previousValue = this._PrintTemplates.Entity;
				if (((previousValue != value) 
							|| (this._PrintTemplates.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintTemplates.Entity = null;
						previousValue.PrintTemplatesExt.Remove(this);
					}
					this._PrintTemplates.Entity = value;
					if ((value != null))
					{
						value.PrintTemplatesExt.Add(this);
						this._PrintTemplateID = value.ID;
					}
					else
					{
						this._PrintTemplateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrintTemplates");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeightGoodsPlu")]
	public partial class WeightGoodsPlu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PLU;
		
		private System.Nullable<int> _GroupNum;
		
		private System.Nullable<int> _ButtonNum;
		
		private string _ButtonName;
		
		private string _ButtonPic;
		
		private System.Nullable<bool> _Active;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPLUChanging(System.Nullable<int> value);
    partial void OnPLUChanged();
    partial void OnGroupNumChanging(System.Nullable<int> value);
    partial void OnGroupNumChanged();
    partial void OnButtonNumChanging(System.Nullable<int> value);
    partial void OnButtonNumChanged();
    partial void OnButtonNameChanging(string value);
    partial void OnButtonNameChanged();
    partial void OnButtonPicChanging(string value);
    partial void OnButtonPicChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public WeightGoodsPlu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLU", DbType="Int")]
		public System.Nullable<int> PLU
		{
			get
			{
				return this._PLU;
			}
			set
			{
				if ((this._PLU != value))
				{
					this.OnPLUChanging(value);
					this.SendPropertyChanging();
					this._PLU = value;
					this.SendPropertyChanged("PLU");
					this.OnPLUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNum", DbType="Int")]
		public System.Nullable<int> GroupNum
		{
			get
			{
				return this._GroupNum;
			}
			set
			{
				if ((this._GroupNum != value))
				{
					this.OnGroupNumChanging(value);
					this.SendPropertyChanging();
					this._GroupNum = value;
					this.SendPropertyChanged("GroupNum");
					this.OnGroupNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonNum", DbType="Int")]
		public System.Nullable<int> ButtonNum
		{
			get
			{
				return this._ButtonNum;
			}
			set
			{
				if ((this._ButtonNum != value))
				{
					this.OnButtonNumChanging(value);
					this.SendPropertyChanging();
					this._ButtonNum = value;
					this.SendPropertyChanged("ButtonNum");
					this.OnButtonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonName", DbType="NVarChar(30)")]
		public string ButtonName
		{
			get
			{
				return this._ButtonName;
			}
			set
			{
				if ((this._ButtonName != value))
				{
					this.OnButtonNameChanging(value);
					this.SendPropertyChanging();
					this._ButtonName = value;
					this.SendPropertyChanged("ButtonName");
					this.OnButtonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonPic", DbType="NVarChar(MAX)")]
		public string ButtonPic
		{
			get
			{
				return this._ButtonPic;
			}
			set
			{
				if ((this._ButtonPic != value))
				{
					this.OnButtonPicChanging(value);
					this.SendPropertyChanging();
					this._ButtonPic = value;
					this.SendPropertyChanged("ButtonPic");
					this.OnButtonPicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeightGroups")]
	public partial class WeightGroups : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _GroupNum;
		
		private System.Nullable<int> _ButtonNum;
		
		private string _ButtonName;
		
		private string _ButtonPic;
		
		private System.Nullable<bool> _Active;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNumChanging(System.Nullable<int> value);
    partial void OnGroupNumChanged();
    partial void OnButtonNumChanging(System.Nullable<int> value);
    partial void OnButtonNumChanged();
    partial void OnButtonNameChanging(string value);
    partial void OnButtonNameChanged();
    partial void OnButtonPicChanging(string value);
    partial void OnButtonPicChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public WeightGroups()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNum", DbType="Int")]
		public System.Nullable<int> GroupNum
		{
			get
			{
				return this._GroupNum;
			}
			set
			{
				if ((this._GroupNum != value))
				{
					this.OnGroupNumChanging(value);
					this.SendPropertyChanging();
					this._GroupNum = value;
					this.SendPropertyChanged("GroupNum");
					this.OnGroupNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonNum", DbType="Int")]
		public System.Nullable<int> ButtonNum
		{
			get
			{
				return this._ButtonNum;
			}
			set
			{
				if ((this._ButtonNum != value))
				{
					this.OnButtonNumChanging(value);
					this.SendPropertyChanging();
					this._ButtonNum = value;
					this.SendPropertyChanged("ButtonNum");
					this.OnButtonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonName", DbType="NVarChar(30)")]
		public string ButtonName
		{
			get
			{
				return this._ButtonName;
			}
			set
			{
				if ((this._ButtonName != value))
				{
					this.OnButtonNameChanging(value);
					this.SendPropertyChanging();
					this._ButtonName = value;
					this.SendPropertyChanged("ButtonName");
					this.OnButtonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonPic", DbType="NVarChar(MAX)")]
		public string ButtonPic
		{
			get
			{
				return this._ButtonPic;
			}
			set
			{
				if ((this._ButtonPic != value))
				{
					this.OnButtonPicChanging(value);
					this.SendPropertyChanging();
					this._ButtonPic = value;
					this.SendPropertyChanged("ButtonPic");
					this.OnButtonPicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintTemplates")]
	public partial class PrintTemplates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UKM_ID;
		
		private string _TemplateName;
		
		private string _FileName;
		
		private System.Nullable<int> _QtyWide;
		
		private System.Nullable<int> _QtyHigh;
		
		private System.Nullable<int> _SkipBetweenPagesMM;
		
		private System.Nullable<int> _ShirinaCennicaMM;
		
		private System.Nullable<int> _VisotaCennicaMM;
		
		private System.Nullable<int> _GoodNameFontWeight;
		
		private System.Nullable<int> _GoodNameX;
		
		private System.Nullable<int> _GoodNameY;
		
		private System.Nullable<int> _GoodNameSimvolovVStr;
		
		private System.Nullable<int> _GoodNameOtstupMM;
		
		private System.Nullable<bool> _GoodNameCentrovano;
		
		private System.Nullable<int> _PriceRubFontWeight;
		
		private System.Nullable<int> _PriceRubX;
		
		private System.Nullable<int> _PriceRubY;
		
		private System.Nullable<bool> _PriceRubFromRightToLeft;
		
		private System.Nullable<int> _SlovoRubFontWeigh;
		
		private System.Nullable<bool> _SlovoRubUnderline;
		
		private System.Nullable<int> _SlovoRubX;
		
		private System.Nullable<int> _SlovoRubY;
		
		private System.Nullable<int> _PriceKopFontWeight;
		
		private System.Nullable<int> _PriceKopX;
		
		private System.Nullable<int> _PriceKopY;
		
		private System.Nullable<int> _SlovoKopFontWeight;
		
		private System.Nullable<bool> _SlovoKopUnderline;
		
		private System.Nullable<int> _SlovoKopX;
		
		private System.Nullable<int> _SlovoKopY;
		
		private System.Nullable<int> _EdinicFontWeight;
		
		private System.Nullable<int> _EdinicX;
		
		private System.Nullable<int> _EdinicY;
		
		private System.Nullable<bool> _EdinicZa100Gr;
		
		private System.Nullable<int> _SostavFontWeight;
		
		private System.Nullable<int> _SostavX;
		
		private System.Nullable<int> _SostavY;
		
		private System.Nullable<int> _SostavSimvolovVStr;
		
		private System.Nullable<int> _SostavOtstupMM;
		
		private System.Nullable<int> _ProizvoditelFontWeight;
		
		private System.Nullable<int> _ProizvoditeX;
		
		private System.Nullable<int> _ProizvoditeY;
		
		private System.Nullable<int> _BarcodeShirinaMM;
		
		private System.Nullable<int> _BarcodeVisotaMM;
		
		private System.Nullable<int> _BarcodeX;
		
		private System.Nullable<int> _BarcodeY;
		
		private System.Nullable<int> _MagazinFontWeight;
		
		private System.Nullable<int> _MagazinX;
		
		private System.Nullable<int> _MagazinY;
		
		private System.Nullable<int> _JurlicoFontWeight;
		
		private System.Nullable<int> _JurlicoX;
		
		private System.Nullable<int> _JurlicoY;
		
		private System.Nullable<int> _JurAddressFontWeight;
		
		private System.Nullable<int> _JurAddressX;
		
		private System.Nullable<int> _JurAddressY;
		
		private System.Nullable<int> _FactAddressFontWeight;
		
		private System.Nullable<int> _FactAddressX;
		
		private System.Nullable<int> _FactAddressY;
		
		private System.Nullable<int> _DataFontWeight;
		
		private System.Nullable<int> _DataX;
		
		private System.Nullable<int> _DataY;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _OldPriceRubFontWeight;
		
		private System.Nullable<int> _OldPriceRubX;
		
		private System.Nullable<int> _OldPriceRubY;
		
		private System.Nullable<int> _OldSlovoRubFontWeigh;
		
		private System.Nullable<int> _OldSlovoRubX;
		
		private System.Nullable<int> _OldSlovoRubY;
		
		private System.Nullable<int> _OldPriceKopFontWeight;
		
		private System.Nullable<int> _OldPriceKopX;
		
		private System.Nullable<int> _OldPriceKopY;
		
		private System.Nullable<int> _OldSlovoKopFontWeight;
		
		private System.Nullable<int> _OldSlovoKopX;
		
		private System.Nullable<int> _OldSlovoKopY;
		
		private System.Nullable<int> _OldPriceLineLength;
		
		private System.Nullable<int> _OldPriceLineX;
		
		private System.Nullable<int> _OldPriceLineY;
		
		private EntitySet<Good> _Good;
		
		private EntitySet<Group> _Group;
		
		private EntitySet<PrintTemplatesExt> _PrintTemplatesExt;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUKM_IDChanging(System.Nullable<int> value);
    partial void OnUKM_IDChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnQtyWideChanging(System.Nullable<int> value);
    partial void OnQtyWideChanged();
    partial void OnQtyHighChanging(System.Nullable<int> value);
    partial void OnQtyHighChanged();
    partial void OnSkipBetweenPagesMMChanging(System.Nullable<int> value);
    partial void OnSkipBetweenPagesMMChanged();
    partial void OnShirinaCennicaMMChanging(System.Nullable<int> value);
    partial void OnShirinaCennicaMMChanged();
    partial void OnVisotaCennicaMMChanging(System.Nullable<int> value);
    partial void OnVisotaCennicaMMChanged();
    partial void OnGoodNameFontWeightChanging(System.Nullable<int> value);
    partial void OnGoodNameFontWeightChanged();
    partial void OnGoodNameXChanging(System.Nullable<int> value);
    partial void OnGoodNameXChanged();
    partial void OnGoodNameYChanging(System.Nullable<int> value);
    partial void OnGoodNameYChanged();
    partial void OnGoodNameSimvolovVStrChanging(System.Nullable<int> value);
    partial void OnGoodNameSimvolovVStrChanged();
    partial void OnGoodNameOtstupMMChanging(System.Nullable<int> value);
    partial void OnGoodNameOtstupMMChanged();
    partial void OnGoodNameCentrovanoChanging(System.Nullable<bool> value);
    partial void OnGoodNameCentrovanoChanged();
    partial void OnPriceRubFontWeightChanging(System.Nullable<int> value);
    partial void OnPriceRubFontWeightChanged();
    partial void OnPriceRubXChanging(System.Nullable<int> value);
    partial void OnPriceRubXChanged();
    partial void OnPriceRubYChanging(System.Nullable<int> value);
    partial void OnPriceRubYChanged();
    partial void OnPriceRubFromRightToLeftChanging(System.Nullable<bool> value);
    partial void OnPriceRubFromRightToLeftChanged();
    partial void OnSlovoRubFontWeighChanging(System.Nullable<int> value);
    partial void OnSlovoRubFontWeighChanged();
    partial void OnSlovoRubUnderlineChanging(System.Nullable<bool> value);
    partial void OnSlovoRubUnderlineChanged();
    partial void OnSlovoRubXChanging(System.Nullable<int> value);
    partial void OnSlovoRubXChanged();
    partial void OnSlovoRubYChanging(System.Nullable<int> value);
    partial void OnSlovoRubYChanged();
    partial void OnPriceKopFontWeightChanging(System.Nullable<int> value);
    partial void OnPriceKopFontWeightChanged();
    partial void OnPriceKopXChanging(System.Nullable<int> value);
    partial void OnPriceKopXChanged();
    partial void OnPriceKopYChanging(System.Nullable<int> value);
    partial void OnPriceKopYChanged();
    partial void OnSlovoKopFontWeightChanging(System.Nullable<int> value);
    partial void OnSlovoKopFontWeightChanged();
    partial void OnSlovoKopUnderlineChanging(System.Nullable<bool> value);
    partial void OnSlovoKopUnderlineChanged();
    partial void OnSlovoKopXChanging(System.Nullable<int> value);
    partial void OnSlovoKopXChanged();
    partial void OnSlovoKopYChanging(System.Nullable<int> value);
    partial void OnSlovoKopYChanged();
    partial void OnEdinicFontWeightChanging(System.Nullable<int> value);
    partial void OnEdinicFontWeightChanged();
    partial void OnEdinicXChanging(System.Nullable<int> value);
    partial void OnEdinicXChanged();
    partial void OnEdinicYChanging(System.Nullable<int> value);
    partial void OnEdinicYChanged();
    partial void OnEdinicZa100GrChanging(System.Nullable<bool> value);
    partial void OnEdinicZa100GrChanged();
    partial void OnSostavFontWeightChanging(System.Nullable<int> value);
    partial void OnSostavFontWeightChanged();
    partial void OnSostavXChanging(System.Nullable<int> value);
    partial void OnSostavXChanged();
    partial void OnSostavYChanging(System.Nullable<int> value);
    partial void OnSostavYChanged();
    partial void OnSostavSimvolovVStrChanging(System.Nullable<int> value);
    partial void OnSostavSimvolovVStrChanged();
    partial void OnSostavOtstupMMChanging(System.Nullable<int> value);
    partial void OnSostavOtstupMMChanged();
    partial void OnProizvoditelFontWeightChanging(System.Nullable<int> value);
    partial void OnProizvoditelFontWeightChanged();
    partial void OnProizvoditeXChanging(System.Nullable<int> value);
    partial void OnProizvoditeXChanged();
    partial void OnProizvoditeYChanging(System.Nullable<int> value);
    partial void OnProizvoditeYChanged();
    partial void OnBarcodeShirinaMMChanging(System.Nullable<int> value);
    partial void OnBarcodeShirinaMMChanged();
    partial void OnBarcodeVisotaMMChanging(System.Nullable<int> value);
    partial void OnBarcodeVisotaMMChanged();
    partial void OnBarcodeXChanging(System.Nullable<int> value);
    partial void OnBarcodeXChanged();
    partial void OnBarcodeYChanging(System.Nullable<int> value);
    partial void OnBarcodeYChanged();
    partial void OnMagazinFontWeightChanging(System.Nullable<int> value);
    partial void OnMagazinFontWeightChanged();
    partial void OnMagazinXChanging(System.Nullable<int> value);
    partial void OnMagazinXChanged();
    partial void OnMagazinYChanging(System.Nullable<int> value);
    partial void OnMagazinYChanged();
    partial void OnJurlicoFontWeightChanging(System.Nullable<int> value);
    partial void OnJurlicoFontWeightChanged();
    partial void OnJurlicoXChanging(System.Nullable<int> value);
    partial void OnJurlicoXChanged();
    partial void OnJurlicoYChanging(System.Nullable<int> value);
    partial void OnJurlicoYChanged();
    partial void OnJurAddressFontWeightChanging(System.Nullable<int> value);
    partial void OnJurAddressFontWeightChanged();
    partial void OnJurAddressXChanging(System.Nullable<int> value);
    partial void OnJurAddressXChanged();
    partial void OnJurAddressYChanging(System.Nullable<int> value);
    partial void OnJurAddressYChanged();
    partial void OnFactAddressFontWeightChanging(System.Nullable<int> value);
    partial void OnFactAddressFontWeightChanged();
    partial void OnFactAddressXChanging(System.Nullable<int> value);
    partial void OnFactAddressXChanged();
    partial void OnFactAddressYChanging(System.Nullable<int> value);
    partial void OnFactAddressYChanged();
    partial void OnDataFontWeightChanging(System.Nullable<int> value);
    partial void OnDataFontWeightChanged();
    partial void OnDataXChanging(System.Nullable<int> value);
    partial void OnDataXChanged();
    partial void OnDataYChanging(System.Nullable<int> value);
    partial void OnDataYChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnOldPriceRubFontWeightChanging(System.Nullable<int> value);
    partial void OnOldPriceRubFontWeightChanged();
    partial void OnOldPriceRubXChanging(System.Nullable<int> value);
    partial void OnOldPriceRubXChanged();
    partial void OnOldPriceRubYChanging(System.Nullable<int> value);
    partial void OnOldPriceRubYChanged();
    partial void OnOldSlovoRubFontWeighChanging(System.Nullable<int> value);
    partial void OnOldSlovoRubFontWeighChanged();
    partial void OnOldSlovoRubXChanging(System.Nullable<int> value);
    partial void OnOldSlovoRubXChanged();
    partial void OnOldSlovoRubYChanging(System.Nullable<int> value);
    partial void OnOldSlovoRubYChanged();
    partial void OnOldPriceKopFontWeightChanging(System.Nullable<int> value);
    partial void OnOldPriceKopFontWeightChanged();
    partial void OnOldPriceKopXChanging(System.Nullable<int> value);
    partial void OnOldPriceKopXChanged();
    partial void OnOldPriceKopYChanging(System.Nullable<int> value);
    partial void OnOldPriceKopYChanged();
    partial void OnOldSlovoKopFontWeightChanging(System.Nullable<int> value);
    partial void OnOldSlovoKopFontWeightChanged();
    partial void OnOldSlovoKopXChanging(System.Nullable<int> value);
    partial void OnOldSlovoKopXChanged();
    partial void OnOldSlovoKopYChanging(System.Nullable<int> value);
    partial void OnOldSlovoKopYChanged();
    partial void OnOldPriceLineLengthChanging(System.Nullable<int> value);
    partial void OnOldPriceLineLengthChanged();
    partial void OnOldPriceLineXChanging(System.Nullable<int> value);
    partial void OnOldPriceLineXChanged();
    partial void OnOldPriceLineYChanging(System.Nullable<int> value);
    partial void OnOldPriceLineYChanged();
    #endregion
		
		public PrintTemplates()
		{
			this._Good = new EntitySet<Good>(new Action<Good>(this.attach_Good), new Action<Good>(this.detach_Good));
			this._Group = new EntitySet<Group>(new Action<Group>(this.attach_Group), new Action<Group>(this.detach_Group));
			this._PrintTemplatesExt = new EntitySet<PrintTemplatesExt>(new Action<PrintTemplatesExt>(this.attach_PrintTemplatesExt), new Action<PrintTemplatesExt>(this.detach_PrintTemplatesExt));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UKM_ID", DbType="Int")]
		public System.Nullable<int> UKM_ID
		{
			get
			{
				return this._UKM_ID;
			}
			set
			{
				if ((this._UKM_ID != value))
				{
					this.OnUKM_IDChanging(value);
					this.SendPropertyChanging();
					this._UKM_ID = value;
					this.SendPropertyChanged("UKM_ID");
					this.OnUKM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="NVarChar(250)")]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._TemplateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(MAX)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyWide", DbType="Int")]
		public System.Nullable<int> QtyWide
		{
			get
			{
				return this._QtyWide;
			}
			set
			{
				if ((this._QtyWide != value))
				{
					this.OnQtyWideChanging(value);
					this.SendPropertyChanging();
					this._QtyWide = value;
					this.SendPropertyChanged("QtyWide");
					this.OnQtyWideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyHigh", DbType="Int")]
		public System.Nullable<int> QtyHigh
		{
			get
			{
				return this._QtyHigh;
			}
			set
			{
				if ((this._QtyHigh != value))
				{
					this.OnQtyHighChanging(value);
					this.SendPropertyChanging();
					this._QtyHigh = value;
					this.SendPropertyChanged("QtyHigh");
					this.OnQtyHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipBetweenPagesMM", DbType="Int")]
		public System.Nullable<int> SkipBetweenPagesMM
		{
			get
			{
				return this._SkipBetweenPagesMM;
			}
			set
			{
				if ((this._SkipBetweenPagesMM != value))
				{
					this.OnSkipBetweenPagesMMChanging(value);
					this.SendPropertyChanging();
					this._SkipBetweenPagesMM = value;
					this.SendPropertyChanged("SkipBetweenPagesMM");
					this.OnSkipBetweenPagesMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShirinaCennicaMM", DbType="Int")]
		public System.Nullable<int> ShirinaCennicaMM
		{
			get
			{
				return this._ShirinaCennicaMM;
			}
			set
			{
				if ((this._ShirinaCennicaMM != value))
				{
					this.OnShirinaCennicaMMChanging(value);
					this.SendPropertyChanging();
					this._ShirinaCennicaMM = value;
					this.SendPropertyChanged("ShirinaCennicaMM");
					this.OnShirinaCennicaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisotaCennicaMM", DbType="Int")]
		public System.Nullable<int> VisotaCennicaMM
		{
			get
			{
				return this._VisotaCennicaMM;
			}
			set
			{
				if ((this._VisotaCennicaMM != value))
				{
					this.OnVisotaCennicaMMChanging(value);
					this.SendPropertyChanging();
					this._VisotaCennicaMM = value;
					this.SendPropertyChanged("VisotaCennicaMM");
					this.OnVisotaCennicaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodNameFontWeight", DbType="Int")]
		public System.Nullable<int> GoodNameFontWeight
		{
			get
			{
				return this._GoodNameFontWeight;
			}
			set
			{
				if ((this._GoodNameFontWeight != value))
				{
					this.OnGoodNameFontWeightChanging(value);
					this.SendPropertyChanging();
					this._GoodNameFontWeight = value;
					this.SendPropertyChanged("GoodNameFontWeight");
					this.OnGoodNameFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodNameX", DbType="Int")]
		public System.Nullable<int> GoodNameX
		{
			get
			{
				return this._GoodNameX;
			}
			set
			{
				if ((this._GoodNameX != value))
				{
					this.OnGoodNameXChanging(value);
					this.SendPropertyChanging();
					this._GoodNameX = value;
					this.SendPropertyChanged("GoodNameX");
					this.OnGoodNameXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodNameY", DbType="Int")]
		public System.Nullable<int> GoodNameY
		{
			get
			{
				return this._GoodNameY;
			}
			set
			{
				if ((this._GoodNameY != value))
				{
					this.OnGoodNameYChanging(value);
					this.SendPropertyChanging();
					this._GoodNameY = value;
					this.SendPropertyChanged("GoodNameY");
					this.OnGoodNameYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodNameSimvolovVStr", DbType="Int")]
		public System.Nullable<int> GoodNameSimvolovVStr
		{
			get
			{
				return this._GoodNameSimvolovVStr;
			}
			set
			{
				if ((this._GoodNameSimvolovVStr != value))
				{
					this.OnGoodNameSimvolovVStrChanging(value);
					this.SendPropertyChanging();
					this._GoodNameSimvolovVStr = value;
					this.SendPropertyChanged("GoodNameSimvolovVStr");
					this.OnGoodNameSimvolovVStrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodNameOtstupMM", DbType="Int")]
		public System.Nullable<int> GoodNameOtstupMM
		{
			get
			{
				return this._GoodNameOtstupMM;
			}
			set
			{
				if ((this._GoodNameOtstupMM != value))
				{
					this.OnGoodNameOtstupMMChanging(value);
					this.SendPropertyChanging();
					this._GoodNameOtstupMM = value;
					this.SendPropertyChanged("GoodNameOtstupMM");
					this.OnGoodNameOtstupMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodNameCentrovano", DbType="Bit")]
		public System.Nullable<bool> GoodNameCentrovano
		{
			get
			{
				return this._GoodNameCentrovano;
			}
			set
			{
				if ((this._GoodNameCentrovano != value))
				{
					this.OnGoodNameCentrovanoChanging(value);
					this.SendPropertyChanging();
					this._GoodNameCentrovano = value;
					this.SendPropertyChanged("GoodNameCentrovano");
					this.OnGoodNameCentrovanoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceRubFontWeight", DbType="Int")]
		public System.Nullable<int> PriceRubFontWeight
		{
			get
			{
				return this._PriceRubFontWeight;
			}
			set
			{
				if ((this._PriceRubFontWeight != value))
				{
					this.OnPriceRubFontWeightChanging(value);
					this.SendPropertyChanging();
					this._PriceRubFontWeight = value;
					this.SendPropertyChanged("PriceRubFontWeight");
					this.OnPriceRubFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceRubX", DbType="Int")]
		public System.Nullable<int> PriceRubX
		{
			get
			{
				return this._PriceRubX;
			}
			set
			{
				if ((this._PriceRubX != value))
				{
					this.OnPriceRubXChanging(value);
					this.SendPropertyChanging();
					this._PriceRubX = value;
					this.SendPropertyChanged("PriceRubX");
					this.OnPriceRubXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceRubY", DbType="Int")]
		public System.Nullable<int> PriceRubY
		{
			get
			{
				return this._PriceRubY;
			}
			set
			{
				if ((this._PriceRubY != value))
				{
					this.OnPriceRubYChanging(value);
					this.SendPropertyChanging();
					this._PriceRubY = value;
					this.SendPropertyChanged("PriceRubY");
					this.OnPriceRubYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceRubFromRightToLeft", DbType="Bit")]
		public System.Nullable<bool> PriceRubFromRightToLeft
		{
			get
			{
				return this._PriceRubFromRightToLeft;
			}
			set
			{
				if ((this._PriceRubFromRightToLeft != value))
				{
					this.OnPriceRubFromRightToLeftChanging(value);
					this.SendPropertyChanging();
					this._PriceRubFromRightToLeft = value;
					this.SendPropertyChanged("PriceRubFromRightToLeft");
					this.OnPriceRubFromRightToLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoRubFontWeigh", DbType="Int")]
		public System.Nullable<int> SlovoRubFontWeigh
		{
			get
			{
				return this._SlovoRubFontWeigh;
			}
			set
			{
				if ((this._SlovoRubFontWeigh != value))
				{
					this.OnSlovoRubFontWeighChanging(value);
					this.SendPropertyChanging();
					this._SlovoRubFontWeigh = value;
					this.SendPropertyChanged("SlovoRubFontWeigh");
					this.OnSlovoRubFontWeighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoRubUnderline", DbType="Bit")]
		public System.Nullable<bool> SlovoRubUnderline
		{
			get
			{
				return this._SlovoRubUnderline;
			}
			set
			{
				if ((this._SlovoRubUnderline != value))
				{
					this.OnSlovoRubUnderlineChanging(value);
					this.SendPropertyChanging();
					this._SlovoRubUnderline = value;
					this.SendPropertyChanged("SlovoRubUnderline");
					this.OnSlovoRubUnderlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoRubX", DbType="Int")]
		public System.Nullable<int> SlovoRubX
		{
			get
			{
				return this._SlovoRubX;
			}
			set
			{
				if ((this._SlovoRubX != value))
				{
					this.OnSlovoRubXChanging(value);
					this.SendPropertyChanging();
					this._SlovoRubX = value;
					this.SendPropertyChanged("SlovoRubX");
					this.OnSlovoRubXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoRubY", DbType="Int")]
		public System.Nullable<int> SlovoRubY
		{
			get
			{
				return this._SlovoRubY;
			}
			set
			{
				if ((this._SlovoRubY != value))
				{
					this.OnSlovoRubYChanging(value);
					this.SendPropertyChanging();
					this._SlovoRubY = value;
					this.SendPropertyChanged("SlovoRubY");
					this.OnSlovoRubYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceKopFontWeight", DbType="Int")]
		public System.Nullable<int> PriceKopFontWeight
		{
			get
			{
				return this._PriceKopFontWeight;
			}
			set
			{
				if ((this._PriceKopFontWeight != value))
				{
					this.OnPriceKopFontWeightChanging(value);
					this.SendPropertyChanging();
					this._PriceKopFontWeight = value;
					this.SendPropertyChanged("PriceKopFontWeight");
					this.OnPriceKopFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceKopX", DbType="Int")]
		public System.Nullable<int> PriceKopX
		{
			get
			{
				return this._PriceKopX;
			}
			set
			{
				if ((this._PriceKopX != value))
				{
					this.OnPriceKopXChanging(value);
					this.SendPropertyChanging();
					this._PriceKopX = value;
					this.SendPropertyChanged("PriceKopX");
					this.OnPriceKopXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceKopY", DbType="Int")]
		public System.Nullable<int> PriceKopY
		{
			get
			{
				return this._PriceKopY;
			}
			set
			{
				if ((this._PriceKopY != value))
				{
					this.OnPriceKopYChanging(value);
					this.SendPropertyChanging();
					this._PriceKopY = value;
					this.SendPropertyChanged("PriceKopY");
					this.OnPriceKopYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoKopFontWeight", DbType="Int")]
		public System.Nullable<int> SlovoKopFontWeight
		{
			get
			{
				return this._SlovoKopFontWeight;
			}
			set
			{
				if ((this._SlovoKopFontWeight != value))
				{
					this.OnSlovoKopFontWeightChanging(value);
					this.SendPropertyChanging();
					this._SlovoKopFontWeight = value;
					this.SendPropertyChanged("SlovoKopFontWeight");
					this.OnSlovoKopFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoKopUnderline", DbType="Bit")]
		public System.Nullable<bool> SlovoKopUnderline
		{
			get
			{
				return this._SlovoKopUnderline;
			}
			set
			{
				if ((this._SlovoKopUnderline != value))
				{
					this.OnSlovoKopUnderlineChanging(value);
					this.SendPropertyChanging();
					this._SlovoKopUnderline = value;
					this.SendPropertyChanged("SlovoKopUnderline");
					this.OnSlovoKopUnderlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoKopX", DbType="Int")]
		public System.Nullable<int> SlovoKopX
		{
			get
			{
				return this._SlovoKopX;
			}
			set
			{
				if ((this._SlovoKopX != value))
				{
					this.OnSlovoKopXChanging(value);
					this.SendPropertyChanging();
					this._SlovoKopX = value;
					this.SendPropertyChanged("SlovoKopX");
					this.OnSlovoKopXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlovoKopY", DbType="Int")]
		public System.Nullable<int> SlovoKopY
		{
			get
			{
				return this._SlovoKopY;
			}
			set
			{
				if ((this._SlovoKopY != value))
				{
					this.OnSlovoKopYChanging(value);
					this.SendPropertyChanging();
					this._SlovoKopY = value;
					this.SendPropertyChanged("SlovoKopY");
					this.OnSlovoKopYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdinicFontWeight", DbType="Int")]
		public System.Nullable<int> EdinicFontWeight
		{
			get
			{
				return this._EdinicFontWeight;
			}
			set
			{
				if ((this._EdinicFontWeight != value))
				{
					this.OnEdinicFontWeightChanging(value);
					this.SendPropertyChanging();
					this._EdinicFontWeight = value;
					this.SendPropertyChanged("EdinicFontWeight");
					this.OnEdinicFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdinicX", DbType="Int")]
		public System.Nullable<int> EdinicX
		{
			get
			{
				return this._EdinicX;
			}
			set
			{
				if ((this._EdinicX != value))
				{
					this.OnEdinicXChanging(value);
					this.SendPropertyChanging();
					this._EdinicX = value;
					this.SendPropertyChanged("EdinicX");
					this.OnEdinicXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdinicY", DbType="Int")]
		public System.Nullable<int> EdinicY
		{
			get
			{
				return this._EdinicY;
			}
			set
			{
				if ((this._EdinicY != value))
				{
					this.OnEdinicYChanging(value);
					this.SendPropertyChanging();
					this._EdinicY = value;
					this.SendPropertyChanged("EdinicY");
					this.OnEdinicYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdinicZa100Gr", DbType="Bit")]
		public System.Nullable<bool> EdinicZa100Gr
		{
			get
			{
				return this._EdinicZa100Gr;
			}
			set
			{
				if ((this._EdinicZa100Gr != value))
				{
					this.OnEdinicZa100GrChanging(value);
					this.SendPropertyChanging();
					this._EdinicZa100Gr = value;
					this.SendPropertyChanged("EdinicZa100Gr");
					this.OnEdinicZa100GrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SostavFontWeight", DbType="Int")]
		public System.Nullable<int> SostavFontWeight
		{
			get
			{
				return this._SostavFontWeight;
			}
			set
			{
				if ((this._SostavFontWeight != value))
				{
					this.OnSostavFontWeightChanging(value);
					this.SendPropertyChanging();
					this._SostavFontWeight = value;
					this.SendPropertyChanged("SostavFontWeight");
					this.OnSostavFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SostavX", DbType="Int")]
		public System.Nullable<int> SostavX
		{
			get
			{
				return this._SostavX;
			}
			set
			{
				if ((this._SostavX != value))
				{
					this.OnSostavXChanging(value);
					this.SendPropertyChanging();
					this._SostavX = value;
					this.SendPropertyChanged("SostavX");
					this.OnSostavXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SostavY", DbType="Int")]
		public System.Nullable<int> SostavY
		{
			get
			{
				return this._SostavY;
			}
			set
			{
				if ((this._SostavY != value))
				{
					this.OnSostavYChanging(value);
					this.SendPropertyChanging();
					this._SostavY = value;
					this.SendPropertyChanged("SostavY");
					this.OnSostavYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SostavSimvolovVStr", DbType="Int")]
		public System.Nullable<int> SostavSimvolovVStr
		{
			get
			{
				return this._SostavSimvolovVStr;
			}
			set
			{
				if ((this._SostavSimvolovVStr != value))
				{
					this.OnSostavSimvolovVStrChanging(value);
					this.SendPropertyChanging();
					this._SostavSimvolovVStr = value;
					this.SendPropertyChanged("SostavSimvolovVStr");
					this.OnSostavSimvolovVStrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SostavOtstupMM", DbType="Int")]
		public System.Nullable<int> SostavOtstupMM
		{
			get
			{
				return this._SostavOtstupMM;
			}
			set
			{
				if ((this._SostavOtstupMM != value))
				{
					this.OnSostavOtstupMMChanging(value);
					this.SendPropertyChanging();
					this._SostavOtstupMM = value;
					this.SendPropertyChanged("SostavOtstupMM");
					this.OnSostavOtstupMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProizvoditelFontWeight", DbType="Int")]
		public System.Nullable<int> ProizvoditelFontWeight
		{
			get
			{
				return this._ProizvoditelFontWeight;
			}
			set
			{
				if ((this._ProizvoditelFontWeight != value))
				{
					this.OnProizvoditelFontWeightChanging(value);
					this.SendPropertyChanging();
					this._ProizvoditelFontWeight = value;
					this.SendPropertyChanged("ProizvoditelFontWeight");
					this.OnProizvoditelFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProizvoditeX", DbType="Int")]
		public System.Nullable<int> ProizvoditeX
		{
			get
			{
				return this._ProizvoditeX;
			}
			set
			{
				if ((this._ProizvoditeX != value))
				{
					this.OnProizvoditeXChanging(value);
					this.SendPropertyChanging();
					this._ProizvoditeX = value;
					this.SendPropertyChanged("ProizvoditeX");
					this.OnProizvoditeXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProizvoditeY", DbType="Int")]
		public System.Nullable<int> ProizvoditeY
		{
			get
			{
				return this._ProizvoditeY;
			}
			set
			{
				if ((this._ProizvoditeY != value))
				{
					this.OnProizvoditeYChanging(value);
					this.SendPropertyChanging();
					this._ProizvoditeY = value;
					this.SendPropertyChanged("ProizvoditeY");
					this.OnProizvoditeYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeShirinaMM", DbType="Int")]
		public System.Nullable<int> BarcodeShirinaMM
		{
			get
			{
				return this._BarcodeShirinaMM;
			}
			set
			{
				if ((this._BarcodeShirinaMM != value))
				{
					this.OnBarcodeShirinaMMChanging(value);
					this.SendPropertyChanging();
					this._BarcodeShirinaMM = value;
					this.SendPropertyChanged("BarcodeShirinaMM");
					this.OnBarcodeShirinaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeVisotaMM", DbType="Int")]
		public System.Nullable<int> BarcodeVisotaMM
		{
			get
			{
				return this._BarcodeVisotaMM;
			}
			set
			{
				if ((this._BarcodeVisotaMM != value))
				{
					this.OnBarcodeVisotaMMChanging(value);
					this.SendPropertyChanging();
					this._BarcodeVisotaMM = value;
					this.SendPropertyChanged("BarcodeVisotaMM");
					this.OnBarcodeVisotaMMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeX", DbType="Int")]
		public System.Nullable<int> BarcodeX
		{
			get
			{
				return this._BarcodeX;
			}
			set
			{
				if ((this._BarcodeX != value))
				{
					this.OnBarcodeXChanging(value);
					this.SendPropertyChanging();
					this._BarcodeX = value;
					this.SendPropertyChanged("BarcodeX");
					this.OnBarcodeXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeY", DbType="Int")]
		public System.Nullable<int> BarcodeY
		{
			get
			{
				return this._BarcodeY;
			}
			set
			{
				if ((this._BarcodeY != value))
				{
					this.OnBarcodeYChanging(value);
					this.SendPropertyChanging();
					this._BarcodeY = value;
					this.SendPropertyChanged("BarcodeY");
					this.OnBarcodeYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazinFontWeight", DbType="Int")]
		public System.Nullable<int> MagazinFontWeight
		{
			get
			{
				return this._MagazinFontWeight;
			}
			set
			{
				if ((this._MagazinFontWeight != value))
				{
					this.OnMagazinFontWeightChanging(value);
					this.SendPropertyChanging();
					this._MagazinFontWeight = value;
					this.SendPropertyChanged("MagazinFontWeight");
					this.OnMagazinFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazinX", DbType="Int")]
		public System.Nullable<int> MagazinX
		{
			get
			{
				return this._MagazinX;
			}
			set
			{
				if ((this._MagazinX != value))
				{
					this.OnMagazinXChanging(value);
					this.SendPropertyChanging();
					this._MagazinX = value;
					this.SendPropertyChanged("MagazinX");
					this.OnMagazinXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagazinY", DbType="Int")]
		public System.Nullable<int> MagazinY
		{
			get
			{
				return this._MagazinY;
			}
			set
			{
				if ((this._MagazinY != value))
				{
					this.OnMagazinYChanging(value);
					this.SendPropertyChanging();
					this._MagazinY = value;
					this.SendPropertyChanged("MagazinY");
					this.OnMagazinYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurlicoFontWeight", DbType="Int")]
		public System.Nullable<int> JurlicoFontWeight
		{
			get
			{
				return this._JurlicoFontWeight;
			}
			set
			{
				if ((this._JurlicoFontWeight != value))
				{
					this.OnJurlicoFontWeightChanging(value);
					this.SendPropertyChanging();
					this._JurlicoFontWeight = value;
					this.SendPropertyChanged("JurlicoFontWeight");
					this.OnJurlicoFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurlicoX", DbType="Int")]
		public System.Nullable<int> JurlicoX
		{
			get
			{
				return this._JurlicoX;
			}
			set
			{
				if ((this._JurlicoX != value))
				{
					this.OnJurlicoXChanging(value);
					this.SendPropertyChanging();
					this._JurlicoX = value;
					this.SendPropertyChanged("JurlicoX");
					this.OnJurlicoXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurlicoY", DbType="Int")]
		public System.Nullable<int> JurlicoY
		{
			get
			{
				return this._JurlicoY;
			}
			set
			{
				if ((this._JurlicoY != value))
				{
					this.OnJurlicoYChanging(value);
					this.SendPropertyChanging();
					this._JurlicoY = value;
					this.SendPropertyChanged("JurlicoY");
					this.OnJurlicoYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurAddressFontWeight", DbType="Int")]
		public System.Nullable<int> JurAddressFontWeight
		{
			get
			{
				return this._JurAddressFontWeight;
			}
			set
			{
				if ((this._JurAddressFontWeight != value))
				{
					this.OnJurAddressFontWeightChanging(value);
					this.SendPropertyChanging();
					this._JurAddressFontWeight = value;
					this.SendPropertyChanged("JurAddressFontWeight");
					this.OnJurAddressFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurAddressX", DbType="Int")]
		public System.Nullable<int> JurAddressX
		{
			get
			{
				return this._JurAddressX;
			}
			set
			{
				if ((this._JurAddressX != value))
				{
					this.OnJurAddressXChanging(value);
					this.SendPropertyChanging();
					this._JurAddressX = value;
					this.SendPropertyChanged("JurAddressX");
					this.OnJurAddressXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurAddressY", DbType="Int")]
		public System.Nullable<int> JurAddressY
		{
			get
			{
				return this._JurAddressY;
			}
			set
			{
				if ((this._JurAddressY != value))
				{
					this.OnJurAddressYChanging(value);
					this.SendPropertyChanging();
					this._JurAddressY = value;
					this.SendPropertyChanged("JurAddressY");
					this.OnJurAddressYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactAddressFontWeight", DbType="Int")]
		public System.Nullable<int> FactAddressFontWeight
		{
			get
			{
				return this._FactAddressFontWeight;
			}
			set
			{
				if ((this._FactAddressFontWeight != value))
				{
					this.OnFactAddressFontWeightChanging(value);
					this.SendPropertyChanging();
					this._FactAddressFontWeight = value;
					this.SendPropertyChanged("FactAddressFontWeight");
					this.OnFactAddressFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactAddressX", DbType="Int")]
		public System.Nullable<int> FactAddressX
		{
			get
			{
				return this._FactAddressX;
			}
			set
			{
				if ((this._FactAddressX != value))
				{
					this.OnFactAddressXChanging(value);
					this.SendPropertyChanging();
					this._FactAddressX = value;
					this.SendPropertyChanged("FactAddressX");
					this.OnFactAddressXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactAddressY", DbType="Int")]
		public System.Nullable<int> FactAddressY
		{
			get
			{
				return this._FactAddressY;
			}
			set
			{
				if ((this._FactAddressY != value))
				{
					this.OnFactAddressYChanging(value);
					this.SendPropertyChanging();
					this._FactAddressY = value;
					this.SendPropertyChanged("FactAddressY");
					this.OnFactAddressYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFontWeight", DbType="Int")]
		public System.Nullable<int> DataFontWeight
		{
			get
			{
				return this._DataFontWeight;
			}
			set
			{
				if ((this._DataFontWeight != value))
				{
					this.OnDataFontWeightChanging(value);
					this.SendPropertyChanging();
					this._DataFontWeight = value;
					this.SendPropertyChanged("DataFontWeight");
					this.OnDataFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataX", DbType="Int")]
		public System.Nullable<int> DataX
		{
			get
			{
				return this._DataX;
			}
			set
			{
				if ((this._DataX != value))
				{
					this.OnDataXChanging(value);
					this.SendPropertyChanging();
					this._DataX = value;
					this.SendPropertyChanged("DataX");
					this.OnDataXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataY", DbType="Int")]
		public System.Nullable<int> DataY
		{
			get
			{
				return this._DataY;
			}
			set
			{
				if ((this._DataY != value))
				{
					this.OnDataYChanging(value);
					this.SendPropertyChanging();
					this._DataY = value;
					this.SendPropertyChanged("DataY");
					this.OnDataYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceRubFontWeight", DbType="Int")]
		public System.Nullable<int> OldPriceRubFontWeight
		{
			get
			{
				return this._OldPriceRubFontWeight;
			}
			set
			{
				if ((this._OldPriceRubFontWeight != value))
				{
					this.OnOldPriceRubFontWeightChanging(value);
					this.SendPropertyChanging();
					this._OldPriceRubFontWeight = value;
					this.SendPropertyChanged("OldPriceRubFontWeight");
					this.OnOldPriceRubFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceRubX", DbType="Int")]
		public System.Nullable<int> OldPriceRubX
		{
			get
			{
				return this._OldPriceRubX;
			}
			set
			{
				if ((this._OldPriceRubX != value))
				{
					this.OnOldPriceRubXChanging(value);
					this.SendPropertyChanging();
					this._OldPriceRubX = value;
					this.SendPropertyChanged("OldPriceRubX");
					this.OnOldPriceRubXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceRubY", DbType="Int")]
		public System.Nullable<int> OldPriceRubY
		{
			get
			{
				return this._OldPriceRubY;
			}
			set
			{
				if ((this._OldPriceRubY != value))
				{
					this.OnOldPriceRubYChanging(value);
					this.SendPropertyChanging();
					this._OldPriceRubY = value;
					this.SendPropertyChanged("OldPriceRubY");
					this.OnOldPriceRubYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSlovoRubFontWeigh", DbType="Int")]
		public System.Nullable<int> OldSlovoRubFontWeigh
		{
			get
			{
				return this._OldSlovoRubFontWeigh;
			}
			set
			{
				if ((this._OldSlovoRubFontWeigh != value))
				{
					this.OnOldSlovoRubFontWeighChanging(value);
					this.SendPropertyChanging();
					this._OldSlovoRubFontWeigh = value;
					this.SendPropertyChanged("OldSlovoRubFontWeigh");
					this.OnOldSlovoRubFontWeighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSlovoRubX", DbType="Int")]
		public System.Nullable<int> OldSlovoRubX
		{
			get
			{
				return this._OldSlovoRubX;
			}
			set
			{
				if ((this._OldSlovoRubX != value))
				{
					this.OnOldSlovoRubXChanging(value);
					this.SendPropertyChanging();
					this._OldSlovoRubX = value;
					this.SendPropertyChanged("OldSlovoRubX");
					this.OnOldSlovoRubXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSlovoRubY", DbType="Int")]
		public System.Nullable<int> OldSlovoRubY
		{
			get
			{
				return this._OldSlovoRubY;
			}
			set
			{
				if ((this._OldSlovoRubY != value))
				{
					this.OnOldSlovoRubYChanging(value);
					this.SendPropertyChanging();
					this._OldSlovoRubY = value;
					this.SendPropertyChanged("OldSlovoRubY");
					this.OnOldSlovoRubYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceKopFontWeight", DbType="Int")]
		public System.Nullable<int> OldPriceKopFontWeight
		{
			get
			{
				return this._OldPriceKopFontWeight;
			}
			set
			{
				if ((this._OldPriceKopFontWeight != value))
				{
					this.OnOldPriceKopFontWeightChanging(value);
					this.SendPropertyChanging();
					this._OldPriceKopFontWeight = value;
					this.SendPropertyChanged("OldPriceKopFontWeight");
					this.OnOldPriceKopFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceKopX", DbType="Int")]
		public System.Nullable<int> OldPriceKopX
		{
			get
			{
				return this._OldPriceKopX;
			}
			set
			{
				if ((this._OldPriceKopX != value))
				{
					this.OnOldPriceKopXChanging(value);
					this.SendPropertyChanging();
					this._OldPriceKopX = value;
					this.SendPropertyChanged("OldPriceKopX");
					this.OnOldPriceKopXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceKopY", DbType="Int")]
		public System.Nullable<int> OldPriceKopY
		{
			get
			{
				return this._OldPriceKopY;
			}
			set
			{
				if ((this._OldPriceKopY != value))
				{
					this.OnOldPriceKopYChanging(value);
					this.SendPropertyChanging();
					this._OldPriceKopY = value;
					this.SendPropertyChanged("OldPriceKopY");
					this.OnOldPriceKopYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSlovoKopFontWeight", DbType="Int")]
		public System.Nullable<int> OldSlovoKopFontWeight
		{
			get
			{
				return this._OldSlovoKopFontWeight;
			}
			set
			{
				if ((this._OldSlovoKopFontWeight != value))
				{
					this.OnOldSlovoKopFontWeightChanging(value);
					this.SendPropertyChanging();
					this._OldSlovoKopFontWeight = value;
					this.SendPropertyChanged("OldSlovoKopFontWeight");
					this.OnOldSlovoKopFontWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSlovoKopX", DbType="Int")]
		public System.Nullable<int> OldSlovoKopX
		{
			get
			{
				return this._OldSlovoKopX;
			}
			set
			{
				if ((this._OldSlovoKopX != value))
				{
					this.OnOldSlovoKopXChanging(value);
					this.SendPropertyChanging();
					this._OldSlovoKopX = value;
					this.SendPropertyChanged("OldSlovoKopX");
					this.OnOldSlovoKopXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSlovoKopY", DbType="Int")]
		public System.Nullable<int> OldSlovoKopY
		{
			get
			{
				return this._OldSlovoKopY;
			}
			set
			{
				if ((this._OldSlovoKopY != value))
				{
					this.OnOldSlovoKopYChanging(value);
					this.SendPropertyChanging();
					this._OldSlovoKopY = value;
					this.SendPropertyChanged("OldSlovoKopY");
					this.OnOldSlovoKopYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceLineLength", DbType="Int")]
		public System.Nullable<int> OldPriceLineLength
		{
			get
			{
				return this._OldPriceLineLength;
			}
			set
			{
				if ((this._OldPriceLineLength != value))
				{
					this.OnOldPriceLineLengthChanging(value);
					this.SendPropertyChanging();
					this._OldPriceLineLength = value;
					this.SendPropertyChanged("OldPriceLineLength");
					this.OnOldPriceLineLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceLineX", DbType="Int")]
		public System.Nullable<int> OldPriceLineX
		{
			get
			{
				return this._OldPriceLineX;
			}
			set
			{
				if ((this._OldPriceLineX != value))
				{
					this.OnOldPriceLineXChanging(value);
					this.SendPropertyChanging();
					this._OldPriceLineX = value;
					this.SendPropertyChanged("OldPriceLineX");
					this.OnOldPriceLineXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPriceLineY", DbType="Int")]
		public System.Nullable<int> OldPriceLineY
		{
			get
			{
				return this._OldPriceLineY;
			}
			set
			{
				if ((this._OldPriceLineY != value))
				{
					this.OnOldPriceLineYChanging(value);
					this.SendPropertyChanging();
					this._OldPriceLineY = value;
					this.SendPropertyChanged("OldPriceLineY");
					this.OnOldPriceLineYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTemplates_Good", Storage="_Good", ThisKey="ID", OtherKey="PrintTemplateID")]
		public EntitySet<Good> Good
		{
			get
			{
				return this._Good;
			}
			set
			{
				this._Good.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTemplates_Group", Storage="_Group", ThisKey="ID", OtherKey="PrintTemplateID")]
		public EntitySet<Group> Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				this._Group.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintTemplates_PrintTemplatesExt", Storage="_PrintTemplatesExt", ThisKey="ID", OtherKey="PrintTemplateID")]
		public EntitySet<PrintTemplatesExt> PrintTemplatesExt
		{
			get
			{
				return this._PrintTemplatesExt;
			}
			set
			{
				this._PrintTemplatesExt.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Good(Good entity)
		{
			this.SendPropertyChanging();
			entity.PrintTemplates = this;
		}
		
		private void detach_Good(Good entity)
		{
			this.SendPropertyChanging();
			entity.PrintTemplates = null;
		}
		
		private void attach_Group(Group entity)
		{
			this.SendPropertyChanging();
			entity.PrintTemplates = this;
		}
		
		private void detach_Group(Group entity)
		{
			this.SendPropertyChanging();
			entity.PrintTemplates = null;
		}
		
		private void attach_PrintTemplatesExt(PrintTemplatesExt entity)
		{
			this.SendPropertyChanging();
			entity.PrintTemplates = this;
		}
		
		private void detach_PrintTemplatesExt(PrintTemplatesExt entity)
		{
			this.SendPropertyChanging();
			entity.PrintTemplates = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MobileTermoPrinters")]
	public partial class MobileTermoPrinters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Num;
		
		private string _Port;
		
		private string _NetPath;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNumChanging(System.Nullable<int> value);
    partial void OnNumChanged();
    partial void OnPortChanging(string value);
    partial void OnPortChanged();
    partial void OnNetPathChanging(string value);
    partial void OnNetPathChanged();
    #endregion
		
		public MobileTermoPrinters()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="Int")]
		public System.Nullable<int> Num
		{
			get
			{
				return this._Num;
			}
			set
			{
				if ((this._Num != value))
				{
					this.OnNumChanging(value);
					this.SendPropertyChanging();
					this._Num = value;
					this.SendPropertyChanged("Num");
					this.OnNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="NVarChar(50)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetPath", DbType="NVarChar(MAX)")]
		public string NetPath
		{
			get
			{
				return this._NetPath;
			}
			set
			{
				if ((this._NetPath != value))
				{
					this.OnNetPathChanging(value);
					this.SendPropertyChanging();
					this._NetPath = value;
					this.SendPropertyChanged("NetPath");
					this.OnNetPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeightNames")]
	public partial class WeightNames : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _WeightNum;
		
		private string _Name;
		
		private System.Nullable<bool> _SamoObsluzivanie;
		
		private System.Nullable<bool> _Active;
		
		private string _WeightIP;
		
		private System.Nullable<int> _Name1Font;
		
		private System.Nullable<int> _Name1simvolv;
		
		private System.Nullable<int> _Name2Font;
		
		private System.Nullable<int> _Name2simvolv;
		
		private System.Nullable<int> _contentFont;
		
		private System.Nullable<int> _contentsimvol;
		
		private System.Nullable<bool> _keyboard;
		
		private System.Nullable<bool> _timesynh;
		
		private System.Nullable<int> _contentFontLarge;
		
		private System.Nullable<int> _contentsimvolLarge;
		
		private System.Nullable<int> _contentallsimvolLarge;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWeightNumChanging(string value);
    partial void OnWeightNumChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSamoObsluzivanieChanging(System.Nullable<bool> value);
    partial void OnSamoObsluzivanieChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnWeightIPChanging(string value);
    partial void OnWeightIPChanged();
    partial void OnName1FontChanging(System.Nullable<int> value);
    partial void OnName1FontChanged();
    partial void OnName1simvolvChanging(System.Nullable<int> value);
    partial void OnName1simvolvChanged();
    partial void OnName2FontChanging(System.Nullable<int> value);
    partial void OnName2FontChanged();
    partial void OnName2simvolvChanging(System.Nullable<int> value);
    partial void OnName2simvolvChanged();
    partial void OncontentFontChanging(System.Nullable<int> value);
    partial void OncontentFontChanged();
    partial void OncontentsimvolChanging(System.Nullable<int> value);
    partial void OncontentsimvolChanged();
    partial void OnkeyboardChanging(System.Nullable<bool> value);
    partial void OnkeyboardChanged();
    partial void OntimesynhChanging(System.Nullable<bool> value);
    partial void OntimesynhChanged();
    partial void OncontentFontLargeChanging(System.Nullable<int> value);
    partial void OncontentFontLargeChanged();
    partial void OncontentsimvolLargeChanging(System.Nullable<int> value);
    partial void OncontentsimvolLargeChanged();
    partial void OncontentallsimvolLargeChanging(System.Nullable<int> value);
    partial void OncontentallsimvolLargeChanged();
    #endregion
		
		public WeightNames()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightNum", DbType="NVarChar(3)")]
		public string WeightNum
		{
			get
			{
				return this._WeightNum;
			}
			set
			{
				if ((this._WeightNum != value))
				{
					this.OnWeightNumChanging(value);
					this.SendPropertyChanging();
					this._WeightNum = value;
					this.SendPropertyChanged("WeightNum");
					this.OnWeightNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(350)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SamoObsluzivanie", DbType="Bit")]
		public System.Nullable<bool> SamoObsluzivanie
		{
			get
			{
				return this._SamoObsluzivanie;
			}
			set
			{
				if ((this._SamoObsluzivanie != value))
				{
					this.OnSamoObsluzivanieChanging(value);
					this.SendPropertyChanging();
					this._SamoObsluzivanie = value;
					this.SendPropertyChanged("SamoObsluzivanie");
					this.OnSamoObsluzivanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightIP", DbType="NVarChar(15)")]
		public string WeightIP
		{
			get
			{
				return this._WeightIP;
			}
			set
			{
				if ((this._WeightIP != value))
				{
					this.OnWeightIPChanging(value);
					this.SendPropertyChanging();
					this._WeightIP = value;
					this.SendPropertyChanged("WeightIP");
					this.OnWeightIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name1Font", DbType="Int")]
		public System.Nullable<int> Name1Font
		{
			get
			{
				return this._Name1Font;
			}
			set
			{
				if ((this._Name1Font != value))
				{
					this.OnName1FontChanging(value);
					this.SendPropertyChanging();
					this._Name1Font = value;
					this.SendPropertyChanged("Name1Font");
					this.OnName1FontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name1simvolv", DbType="Int")]
		public System.Nullable<int> Name1simvolv
		{
			get
			{
				return this._Name1simvolv;
			}
			set
			{
				if ((this._Name1simvolv != value))
				{
					this.OnName1simvolvChanging(value);
					this.SendPropertyChanging();
					this._Name1simvolv = value;
					this.SendPropertyChanged("Name1simvolv");
					this.OnName1simvolvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name2Font", DbType="Int")]
		public System.Nullable<int> Name2Font
		{
			get
			{
				return this._Name2Font;
			}
			set
			{
				if ((this._Name2Font != value))
				{
					this.OnName2FontChanging(value);
					this.SendPropertyChanging();
					this._Name2Font = value;
					this.SendPropertyChanged("Name2Font");
					this.OnName2FontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name2simvolv", DbType="Int")]
		public System.Nullable<int> Name2simvolv
		{
			get
			{
				return this._Name2simvolv;
			}
			set
			{
				if ((this._Name2simvolv != value))
				{
					this.OnName2simvolvChanging(value);
					this.SendPropertyChanging();
					this._Name2simvolv = value;
					this.SendPropertyChanged("Name2simvolv");
					this.OnName2simvolvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentFont", DbType="Int")]
		public System.Nullable<int> contentFont
		{
			get
			{
				return this._contentFont;
			}
			set
			{
				if ((this._contentFont != value))
				{
					this.OncontentFontChanging(value);
					this.SendPropertyChanging();
					this._contentFont = value;
					this.SendPropertyChanged("contentFont");
					this.OncontentFontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentsimvol", DbType="Int")]
		public System.Nullable<int> contentsimvol
		{
			get
			{
				return this._contentsimvol;
			}
			set
			{
				if ((this._contentsimvol != value))
				{
					this.OncontentsimvolChanging(value);
					this.SendPropertyChanging();
					this._contentsimvol = value;
					this.SendPropertyChanged("contentsimvol");
					this.OncontentsimvolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyboard", DbType="Bit")]
		public System.Nullable<bool> keyboard
		{
			get
			{
				return this._keyboard;
			}
			set
			{
				if ((this._keyboard != value))
				{
					this.OnkeyboardChanging(value);
					this.SendPropertyChanging();
					this._keyboard = value;
					this.SendPropertyChanged("keyboard");
					this.OnkeyboardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timesynh", DbType="Bit")]
		public System.Nullable<bool> timesynh
		{
			get
			{
				return this._timesynh;
			}
			set
			{
				if ((this._timesynh != value))
				{
					this.OntimesynhChanging(value);
					this.SendPropertyChanging();
					this._timesynh = value;
					this.SendPropertyChanged("timesynh");
					this.OntimesynhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentFontLarge", DbType="Int")]
		public System.Nullable<int> contentFontLarge
		{
			get
			{
				return this._contentFontLarge;
			}
			set
			{
				if ((this._contentFontLarge != value))
				{
					this.OncontentFontLargeChanging(value);
					this.SendPropertyChanging();
					this._contentFontLarge = value;
					this.SendPropertyChanged("contentFontLarge");
					this.OncontentFontLargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentsimvolLarge", DbType="Int")]
		public System.Nullable<int> contentsimvolLarge
		{
			get
			{
				return this._contentsimvolLarge;
			}
			set
			{
				if ((this._contentsimvolLarge != value))
				{
					this.OncontentsimvolLargeChanging(value);
					this.SendPropertyChanging();
					this._contentsimvolLarge = value;
					this.SendPropertyChanged("contentsimvolLarge");
					this.OncontentsimvolLargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentallsimvolLarge", DbType="Int")]
		public System.Nullable<int> contentallsimvolLarge
		{
			get
			{
				return this._contentallsimvolLarge;
			}
			set
			{
				if ((this._contentallsimvolLarge != value))
				{
					this.OncontentallsimvolLargeChanging(value);
					this.SendPropertyChanging();
					this._contentallsimvolLarge = value;
					this.SendPropertyChanged("contentallsimvolLarge");
					this.OncontentallsimvolLargeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceChangeLines")]
	public partial class PriceChangeLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _JournalID;
		
		private System.Nullable<int> _GoodID;
		
		private string _ItemID_UKM;
		
		private System.Nullable<double> _NewPrice;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _Akcionniy;
		
		private int _counted;
		
		private string _alcoDt;
		
		private EntityRef<Good> _Good;
		
		private EntityRef<PriceChangeJour> _PriceChangeJour;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJournalIDChanging(System.Nullable<int> value);
    partial void OnJournalIDChanged();
    partial void OnGoodIDChanging(System.Nullable<int> value);
    partial void OnGoodIDChanged();
    partial void OnItemID_UKMChanging(string value);
    partial void OnItemID_UKMChanged();
    partial void OnNewPriceChanging(System.Nullable<double> value);
    partial void OnNewPriceChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnAkcionniyChanging(System.Nullable<bool> value);
    partial void OnAkcionniyChanged();
    partial void OncountedChanging(int value);
    partial void OncountedChanged();
    partial void OnalcoDtChanging(string value);
    partial void OnalcoDtChanged();
    #endregion
		
		public PriceChangeLine()
		{
			this._Good = default(EntityRef<Good>);
			this._PriceChangeJour = default(EntityRef<PriceChangeJour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", DbType="Int")]
		public System.Nullable<int> JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					if (this._PriceChangeJour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodID", DbType="Int")]
		public System.Nullable<int> GoodID
		{
			get
			{
				return this._GoodID;
			}
			set
			{
				if ((this._GoodID != value))
				{
					if (this._Good.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoodIDChanging(value);
					this.SendPropertyChanging();
					this._GoodID = value;
					this.SendPropertyChanged("GoodID");
					this.OnGoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID_UKM", DbType="NVarChar(50)")]
		public string ItemID_UKM
		{
			get
			{
				return this._ItemID_UKM;
			}
			set
			{
				if ((this._ItemID_UKM != value))
				{
					this.OnItemID_UKMChanging(value);
					this.SendPropertyChanging();
					this._ItemID_UKM = value;
					this.SendPropertyChanged("ItemID_UKM");
					this.OnItemID_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPrice", DbType="Float")]
		public System.Nullable<double> NewPrice
		{
			get
			{
				return this._NewPrice;
			}
			set
			{
				if ((this._NewPrice != value))
				{
					this.OnNewPriceChanging(value);
					this.SendPropertyChanging();
					this._NewPrice = value;
					this.SendPropertyChanged("NewPrice");
					this.OnNewPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Akcionniy", DbType="Bit")]
		public System.Nullable<bool> Akcionniy
		{
			get
			{
				return this._Akcionniy;
			}
			set
			{
				if ((this._Akcionniy != value))
				{
					this.OnAkcionniyChanging(value);
					this.SendPropertyChanging();
					this._Akcionniy = value;
					this.SendPropertyChanged("Akcionniy");
					this.OnAkcionniyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counted", DbType="Int NOT NULL")]
		public int counted
		{
			get
			{
				return this._counted;
			}
			set
			{
				if ((this._counted != value))
				{
					this.OncountedChanging(value);
					this.SendPropertyChanging();
					this._counted = value;
					this.SendPropertyChanged("counted");
					this.OncountedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alcoDt", DbType="NVarChar(50)")]
		public string alcoDt
		{
			get
			{
				return this._alcoDt;
			}
			set
			{
				if ((this._alcoDt != value))
				{
					this.OnalcoDtChanging(value);
					this.SendPropertyChanging();
					this._alcoDt = value;
					this.SendPropertyChanged("alcoDt");
					this.OnalcoDtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Good_PriceChangeLine", Storage="_Good", ThisKey="GoodID", OtherKey="ID", IsForeignKey=true)]
		public Good Good
		{
			get
			{
				return this._Good.Entity;
			}
			set
			{
				Good previousValue = this._Good.Entity;
				if (((previousValue != value) 
							|| (this._Good.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Good.Entity = null;
						previousValue.PriceChangeLine.Remove(this);
					}
					this._Good.Entity = value;
					if ((value != null))
					{
						value.PriceChangeLine.Add(this);
						this._GoodID = value.ID;
					}
					else
					{
						this._GoodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Good");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceChangeJour_PriceChangeLine", Storage="_PriceChangeJour", ThisKey="JournalID", OtherKey="ID", IsForeignKey=true)]
		public PriceChangeJour PriceChangeJour
		{
			get
			{
				return this._PriceChangeJour.Entity;
			}
			set
			{
				PriceChangeJour previousValue = this._PriceChangeJour.Entity;
				if (((previousValue != value) 
							|| (this._PriceChangeJour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceChangeJour.Entity = null;
						previousValue.PriceChangeLine.Remove(this);
					}
					this._PriceChangeJour.Entity = value;
					if ((value != null))
					{
						value.PriceChangeLine.Add(this);
						this._JournalID = value.ID;
					}
					else
					{
						this._JournalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PriceChangeJour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreInfo")]
	public partial class StoreInfos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StoreName;
		
		private string _Company;
		
		private string _AddressFact;
		
		private string _AddressJur;
		
		private System.Nullable<int> _StoreID_UKM;
		
		private string _PriceType_ID_UKM;
		
		private System.Nullable<int> _PriceList_ID_UKM;
		
		private string _PriceListName_UKM;
		
		private string _CompanyProizvodstvo;
		
		private string _ProizvodstvoAddress;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private System.Nullable<bool> _Active;
		
		private string _ActPriceType_ID_UKM;
		
		private System.Nullable<int> _ActPriceList_ID_UKM;
		
		private string _ActPriceListName_UKM;
		
		private string _JurNameTermoPrn;
		
		private string _JurAddrTermoPrn;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressFactChanging(string value);
    partial void OnAddressFactChanged();
    partial void OnAddressJurChanging(string value);
    partial void OnAddressJurChanged();
    partial void OnStoreID_UKMChanging(System.Nullable<int> value);
    partial void OnStoreID_UKMChanged();
    partial void OnPriceType_ID_UKMChanging(string value);
    partial void OnPriceType_ID_UKMChanged();
    partial void OnPriceList_ID_UKMChanging(System.Nullable<int> value);
    partial void OnPriceList_ID_UKMChanged();
    partial void OnPriceListName_UKMChanging(string value);
    partial void OnPriceListName_UKMChanged();
    partial void OnCompanyProizvodstvoChanging(string value);
    partial void OnCompanyProizvodstvoChanged();
    partial void OnProizvodstvoAddressChanging(string value);
    partial void OnProizvodstvoAddressChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnActPriceType_ID_UKMChanging(string value);
    partial void OnActPriceType_ID_UKMChanged();
    partial void OnActPriceList_ID_UKMChanging(System.Nullable<int> value);
    partial void OnActPriceList_ID_UKMChanged();
    partial void OnActPriceListName_UKMChanging(string value);
    partial void OnActPriceListName_UKMChanged();
    partial void OnJurNameTermoPrnChanging(string value);
    partial void OnJurNameTermoPrnChanged();
    partial void OnJurAddrTermoPrnChanging(string value);
    partial void OnJurAddrTermoPrnChanged();
    #endregion
		
		public StoreInfos()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="NVarChar(250)")]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(250)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressFact", DbType="NVarChar(250)")]
		public string AddressFact
		{
			get
			{
				return this._AddressFact;
			}
			set
			{
				if ((this._AddressFact != value))
				{
					this.OnAddressFactChanging(value);
					this.SendPropertyChanging();
					this._AddressFact = value;
					this.SendPropertyChanged("AddressFact");
					this.OnAddressFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressJur", DbType="NVarChar(250)")]
		public string AddressJur
		{
			get
			{
				return this._AddressJur;
			}
			set
			{
				if ((this._AddressJur != value))
				{
					this.OnAddressJurChanging(value);
					this.SendPropertyChanging();
					this._AddressJur = value;
					this.SendPropertyChanged("AddressJur");
					this.OnAddressJurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID_UKM", DbType="Int")]
		public System.Nullable<int> StoreID_UKM
		{
			get
			{
				return this._StoreID_UKM;
			}
			set
			{
				if ((this._StoreID_UKM != value))
				{
					this.OnStoreID_UKMChanging(value);
					this.SendPropertyChanging();
					this._StoreID_UKM = value;
					this.SendPropertyChanged("StoreID_UKM");
					this.OnStoreID_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType_ID_UKM", DbType="NVarChar(38)")]
		public string PriceType_ID_UKM
		{
			get
			{
				return this._PriceType_ID_UKM;
			}
			set
			{
				if ((this._PriceType_ID_UKM != value))
				{
					this.OnPriceType_ID_UKMChanging(value);
					this.SendPropertyChanging();
					this._PriceType_ID_UKM = value;
					this.SendPropertyChanged("PriceType_ID_UKM");
					this.OnPriceType_ID_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceList_ID_UKM", DbType="Int")]
		public System.Nullable<int> PriceList_ID_UKM
		{
			get
			{
				return this._PriceList_ID_UKM;
			}
			set
			{
				if ((this._PriceList_ID_UKM != value))
				{
					this.OnPriceList_ID_UKMChanging(value);
					this.SendPropertyChanging();
					this._PriceList_ID_UKM = value;
					this.SendPropertyChanged("PriceList_ID_UKM");
					this.OnPriceList_ID_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListName_UKM", DbType="NVarChar(100)")]
		public string PriceListName_UKM
		{
			get
			{
				return this._PriceListName_UKM;
			}
			set
			{
				if ((this._PriceListName_UKM != value))
				{
					this.OnPriceListName_UKMChanging(value);
					this.SendPropertyChanging();
					this._PriceListName_UKM = value;
					this.SendPropertyChanged("PriceListName_UKM");
					this.OnPriceListName_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyProizvodstvo", DbType="NVarChar(250)")]
		public string CompanyProizvodstvo
		{
			get
			{
				return this._CompanyProizvodstvo;
			}
			set
			{
				if ((this._CompanyProizvodstvo != value))
				{
					this.OnCompanyProizvodstvoChanging(value);
					this.SendPropertyChanging();
					this._CompanyProizvodstvo = value;
					this.SendPropertyChanged("CompanyProizvodstvo");
					this.OnCompanyProizvodstvoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProizvodstvoAddress", DbType="NVarChar(250)")]
		public string ProizvodstvoAddress
		{
			get
			{
				return this._ProizvodstvoAddress;
			}
			set
			{
				if ((this._ProizvodstvoAddress != value))
				{
					this.OnProizvodstvoAddressChanging(value);
					this.SendPropertyChanging();
					this._ProizvodstvoAddress = value;
					this.SendPropertyChanged("ProizvodstvoAddress");
					this.OnProizvodstvoAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActPriceType_ID_UKM", DbType="NVarChar(38)")]
		public string ActPriceType_ID_UKM
		{
			get
			{
				return this._ActPriceType_ID_UKM;
			}
			set
			{
				if ((this._ActPriceType_ID_UKM != value))
				{
					this.OnActPriceType_ID_UKMChanging(value);
					this.SendPropertyChanging();
					this._ActPriceType_ID_UKM = value;
					this.SendPropertyChanged("ActPriceType_ID_UKM");
					this.OnActPriceType_ID_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActPriceList_ID_UKM", DbType="Int")]
		public System.Nullable<int> ActPriceList_ID_UKM
		{
			get
			{
				return this._ActPriceList_ID_UKM;
			}
			set
			{
				if ((this._ActPriceList_ID_UKM != value))
				{
					this.OnActPriceList_ID_UKMChanging(value);
					this.SendPropertyChanging();
					this._ActPriceList_ID_UKM = value;
					this.SendPropertyChanged("ActPriceList_ID_UKM");
					this.OnActPriceList_ID_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActPriceListName_UKM", DbType="NVarChar(100)")]
		public string ActPriceListName_UKM
		{
			get
			{
				return this._ActPriceListName_UKM;
			}
			set
			{
				if ((this._ActPriceListName_UKM != value))
				{
					this.OnActPriceListName_UKMChanging(value);
					this.SendPropertyChanging();
					this._ActPriceListName_UKM = value;
					this.SendPropertyChanged("ActPriceListName_UKM");
					this.OnActPriceListName_UKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurNameTermoPrn", DbType="NVarChar(250)")]
		public string JurNameTermoPrn
		{
			get
			{
				return this._JurNameTermoPrn;
			}
			set
			{
				if ((this._JurNameTermoPrn != value))
				{
					this.OnJurNameTermoPrnChanging(value);
					this.SendPropertyChanging();
					this._JurNameTermoPrn = value;
					this.SendPropertyChanged("JurNameTermoPrn");
					this.OnJurNameTermoPrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurAddrTermoPrn", DbType="NVarChar(250)")]
		public string JurAddrTermoPrn
		{
			get
			{
				return this._JurAddrTermoPrn;
			}
			set
			{
				if ((this._JurAddrTermoPrn != value))
				{
					this.OnJurAddrTermoPrnChanging(value);
					this.SendPropertyChanging();
					this._JurAddrTermoPrn = value;
					this.SendPropertyChanged("JurAddrTermoPrn");
					this.OnJurAddrTermoPrnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
